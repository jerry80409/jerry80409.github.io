<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PAWS</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jerry80409.github.io/"/>
  <updated>2020-02-06T10:55:48.043Z</updated>
  <id>https://jerry80409.github.io/</id>
  
  <author>
    <name>jerry80409</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gradle-101</title>
    <link href="https://jerry80409.github.io/2020/02/06/gradle-101/"/>
    <id>https://jerry80409.github.io/2020/02/06/gradle-101/</id>
    <published>2020-02-06T06:39:57.000Z</published>
    <updated>2020-02-06T10:55:48.043Z</updated>
    
    <content type="html"><![CDATA[<p>大部分的 Java 專案通常都會配置 <a href="https://maven.apache.org/" target="_blank" rel="noopener">maven</a> 或是 <a href="https://gradle.org/" target="_blank" rel="noopener">gradle</a> 來做專案管理, 這兩個工具的角色就類似 PHP 的 <a href="https://getcomposer.org/" target="_blank" rel="noopener">composer</a> 或是 nodejs 的 <a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a>, 可以用來協助建置專案, 套件依賴管理, 建立 task 模組做 deploy 或 testing。</p><p>選用 maven 或是 gradle 端看團隊成員的狀況, 如果有熟悉 Kotlin 或是 Groovy 選用 gradle 會比較好一點, 但 2 者都不會太難入門 (我自己覺得啦 XD), maven 雖然比較老派, 但一些套件比較穩定。</p><hr><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install</span></span><br><span class="line">brew install gradle</span><br><span class="line"></span><br><span class="line"><span class="comment"># check version</span></span><br><span class="line">gradle -v</span><br></pre></td></tr></table></figure><hr><h2 id="Initial-gradle-project"><a href="#Initial-gradle-project" class="headerlink" title="Initial gradle project"></a>Initial gradle project</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立 project 目錄</span></span><br><span class="line">mkdir project-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 進入 project 目錄, 並且初始化 gradle 專案</span></span><br><span class="line"><span class="built_in">cd</span> project-name &amp;&amp; gradle init</span><br><span class="line"></span><br><span class="line"><span class="comment"># list project 底下的檔案與目錄 (之後在細說)</span></span><br><span class="line">ls </span><br><span class="line">build.gradle  gradle  gradlew  gradlew.bat  settings.gradle</span><br></pre></td></tr></table></figure><ul><li><code>build.gradle</code> 專案的主要維運腳本。</li><li><code>gradle</code> 包裝 gradle 程式的主體, 裡面有 <a href="https://docs.gradle.org/4.10.3/userguide/gradle_wrapper.html" target="_blank" rel="noopener">gradle-wrapper.jar</a>, 所以 gradle 運行時需要 JVM 的環境。</li><li><code>gradlew</code> 是一個以直接在 UNIX 環境執行的執行檔, 會比較建議執行 gradle 相關操作時使用 <code>gradlew</code>, 不用在 target 或是 CI Runner 再安裝 gradle CLI。</li><li><code>gradlew.bat</code> 是一個可以直接在 WINDOWS 環境執行的執行檔。</li><li><code>settings.gradle</code> 是用來做此專案的 gradle 運行時的 configuration, 比如說: <strong><a href="https://docs.gradle.org/current/userguide/multi_project_builds.html" target="_blank" rel="noopener">Multi-Porjects</a></strong> 的架構, 或是添加 <code>org.gradle.daemon=true</code> 在背景運行之類的設定。</li></ul><hr><h2 id="Basic-Task"><a href="#Basic-Task" class="headerlink" title="Basic Task"></a>Basic Task</h2><h3 id="setting-gradle"><a href="#setting-gradle" class="headerlink" title="setting.gradle"></a>setting.gradle</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 會在 Initialization phase 被執行</span></span><br><span class="line">println <span class="string">'This is executed during the initialization phase.'</span></span><br><span class="line"></span><br><span class="line">rootProject.name = <span class="string">'gradle-multi-module'</span></span><br></pre></td></tr></table></figure><h3 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    <span class="comment">// 需要 java plugin</span></span><br><span class="line">    id <span class="string">'java'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task hello &#123;</span><br><span class="line">    doFirst &#123;</span><br><span class="line">        println <span class="string">'Executed doFirst block!'</span></span><br><span class="line">    &#125;</span><br><span class="line">    doLast &#123;</span><br><span class="line">        println <span class="string">'Executed doLast block!'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 這行會在 Configure project 階段執行</span></span><br><span class="line">    println <span class="string">'Hello World!'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Execute-task"><a href="#Execute-task" class="headerlink" title="Execute task"></a>Execute task</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gradlew hello</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以攜帶 -q 參數, 代表 quiet 模式, 會減少一些不必要的 stdout 輸出(比如說: project configure)</span></span><br><span class="line"><span class="comment"># ./gradlew -q hello</span></span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">Hello World!</span><br><span class="line"></span><br><span class="line">&gt; Task :hello</span><br><span class="line">Executed doFirst block!</span><br><span class="line">Executed doLast block!</span><br></pre></td></tr></table></figure><hr><h2 id="Build-phases"><a href="#Build-phases" class="headerlink" title="Build phases"></a>Build phases</h2><p>參考 <a href="https://docs.gradle.org/current/userguide/build_lifecycle.html" target="_blank" rel="noopener">build lifecycle</a></p><h3 id="Initialization"><a href="#Initialization" class="headerlink" title="Initialization"></a>Initialization</h3><p>依據 <code>settings.gradle</code> 決定是 single / multi-projects 再去建立 Gradle 的 project instance.</p><blockquote><p>Gradle supports single and multi-project builds. During the initialization phase, Gradle determines which projects are going to take part in the build, and creates a Project instance for each of these projects.</p></blockquote><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>官方說明很簡略, 就只是說在此階段會讀取整個 <code>build.gradle</code> 再去決定要 executed 的部分。</p><blockquote><p>During this phase the project objects are configured. The build scripts of all projects which are part of the build are executed.</p></blockquote><h3 id="Execution"><a href="#Execution" class="headerlink" title="Execution"></a>Execution</h3><p>gradle 決定 task 的 subset(<strong>doFirst</strong>, <strong>doFirst</strong>), 經過 configuration 階段後再去執行。</p><blockquote><p>Gradle determines the subset of the tasks, created and configured during the configuration phase, to be executed. The subset is determined by the task name arguments passed to the gradle command and the current directory. Gradle then executes each of the selected tasks.</p></blockquote><p>所以在上面的執行範例中, 看到 <code>Hello World</code> 會在 <code>Configure project</code> 階段就被執行, 所以在寫 task 的時候 <strong>要注意這個 task 要在哪個 phases 被執行</strong>。</p><hr><h2 id="Task-with-groovy-DSL"><a href="#Task-with-groovy-DSL" class="headerlink" title="Task with groovy DSL"></a>Task with groovy DSL</h2><h3 id="build-gradle-1"><a href="#build-gradle-1" class="headerlink" title="build.gradle"></a>build.gradle</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">task count &#123;</span><br><span class="line">    doLast &#123;</span><br><span class="line">        <span class="number">4.</span>times &#123;</span><br><span class="line">            println <span class="string">"$it"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Execute-task-1"><a href="#Execute-task-1" class="headerlink" title="Execute task"></a>Execute task</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gradlew count   </span><br><span class="line">This is executed during the initialization phase.</span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">Hello World!</span><br><span class="line"></span><br><span class="line">&gt; Task :count</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><hr><h2 id="Task-dependencies"><a href="#Task-dependencies" class="headerlink" title="Task dependencies"></a>Task dependencies</h2><h3 id="build-gradle-2"><a href="#build-gradle-2" class="headerlink" title="build.gradle"></a>build.gradle</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">// demo task</span></span><br><span class="line">task hello &#123;</span><br><span class="line">    doFirst &#123;</span><br><span class="line">        println <span class="string">'Executed doFirst block!'</span></span><br><span class="line">    &#125;</span><br><span class="line">    doLast &#123;</span><br><span class="line">        println <span class="string">'Executed doLast block!'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 這行會在 Configure project 階段執行</span></span><br><span class="line">    println <span class="string">'Hello World!'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task greeting &#123;</span><br><span class="line">    dependsOn <span class="string">'hello'</span></span><br><span class="line">    doLast &#123;</span><br><span class="line">        println <span class="string">'Morning~'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Execute-task-2"><a href="#Execute-task-2" class="headerlink" title="Execute task"></a>Execute task</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gradlew greeting</span><br><span class="line">This is executed during the initialization phase.</span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">Hello World!</span><br><span class="line"></span><br><span class="line">&gt; Task :hello</span><br><span class="line">Executed doFirst block!</span><br><span class="line">Executed doLast block!</span><br><span class="line"></span><br><span class="line">&gt; Task :greeting</span><br><span class="line">Morning~</span><br></pre></td></tr></table></figure><hr><h2 id="Dynamic-tasks"><a href="#Dynamic-tasks" class="headerlink" title="Dynamic tasks"></a>Dynamic tasks</h2><h3 id="build-gradle-3"><a href="#build-gradle-3" class="headerlink" title="build.gradle"></a>build.gradle</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="number">4.</span>times &#123; counter -&gt;</span><br><span class="line">    task <span class="string">"task$counter"</span> &#123;</span><br><span class="line">        doLast &#123;</span><br><span class="line">            println <span class="string">"I'm task number $counter"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Execute-task-3"><a href="#Execute-task-3" class="headerlink" title="Execute task"></a>Execute task</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gradlew task1   </span><br><span class="line">This is executed during the initialization phase.</span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">Hello World!</span><br><span class="line"></span><br><span class="line">&gt; Task :task1</span><br><span class="line">I<span class="string">'m task number 1</span></span><br></pre></td></tr></table></figure><h2 id="Zip-task"><a href="#Zip-task" class="headerlink" title="Zip task"></a>Zip task</h2><h3 id="build-gradle-4"><a href="#build-gradle-4" class="headerlink" title="build.gradle"></a>build.gradle</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">task zip(<span class="string">type:</span> Zip, <span class="string">group:</span> <span class="string">'Archive'</span>, <span class="string">description:</span> <span class="string">'Archives source in a zip file'</span>) &#123;</span><br><span class="line">    archiveName <span class="string">'demo.zip'</span></span><br><span class="line">    destinationDirectory = file(<span class="string">"$buildDir/dist"</span>)</span><br><span class="line">    from <span class="string">'src'</span>  <span class="comment">// from 這邊的設定還不是很懂</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Execute-Task"><a href="#Execute-Task" class="headerlink" title="Execute Task"></a>Execute Task</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">This is executed during the initialization phase.</span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">Hello World!</span><br><span class="line">Zip files from src to /Users/jerry80409/eton/gradle-multi-module/build/dist</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大部分的 Java 專案通常都會配置 &lt;a href=&quot;https://maven.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;maven&lt;/a&gt; 或是 &lt;a href=&quot;https://gradle.org/&quot; target=&quot;
      
    
    </summary>
    
      <category term="dev_ops" scheme="https://jerry80409.github.io/categories/dev-ops/"/>
    
    
      <category term="gradle" scheme="https://jerry80409.github.io/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>run-oracle-11g-on-docker</title>
    <link href="https://jerry80409.github.io/2020/01/13/run-oracle-11g-on-docker/"/>
    <id>https://jerry80409.github.io/2020/01/13/run-oracle-11g-on-docker/</id>
    <published>2020-01-13T08:15:20.000Z</published>
    <updated>2020-01-26T08:04:41.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Oracle-Enterprise-11g-Docker-Image"><a href="#Oracle-Enterprise-11g-Docker-Image" class="headerlink" title="Oracle Enterprise 11g Docker Image"></a>Oracle Enterprise 11g Docker Image</h2><p>這個紀錄主要是協助團隊, 於本地 Local 運行 Oracle Database, 方便大家開發, 避免開發上的資料衝突,</p><p>我採用的這個 image 非官方 Oracle 的映像, 但幫我省去了許多 oracle licence 同意處理的問題…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://hub.docker.com/r/loliconneko/oracle-ee-11g</span><br></pre></td></tr></table></figure></p><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>如果是習慣使用 docker 的人, 可以參照文件<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker pull</span></span><br><span class="line">docker pull loliconneko/oracle-ee-11g</span><br><span class="line"></span><br><span class="line"><span class="comment"># run docker</span></span><br><span class="line">docker run -d -p 8080:8080 -p 1521:1521 loliconneko/oracle-ee-11g</span><br></pre></td></tr></table></figure></p><p>運行後, 基本的 connection 資訊<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">hostname: localhost</span><br><span class="line">port: 1521</span><br><span class="line">sid: EE</span><br><span class="line">service name: EE.oracle.docker</span><br><span class="line">username: system</span><br><span class="line">password: oracle</span><br></pre></td></tr></table></figure></p><h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h3><p>我自己平常的開發習慣是用 docker-compose(3.7);<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.7'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="comment"># https://hub.docker.com/r/loliconneko/oracle-ee-11g</span></span><br><span class="line"><span class="attr">  oracle:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">loliconneko/oracle-ee-11g:latest</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">oracle</span></span><br><span class="line"><span class="attr">    working_dir:</span> <span class="string">/u01/app/oracle/oradata</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"1521:1521"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">WEB_CONSOLE=false</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">IMPORT_FROM_VOLUME=true</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line">      <span class="comment"># 這個 volumn 用來放 Oracle 本體</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"./oradata:/u01/app/oracle"</span></span><br><span class="line">      <span class="comment"># 這個 volumn 用來匯入 Oracle 的資料</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"./import_oracle:/u01/app/oracle/admin/EE/dpdump"</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">backend</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  backend:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">docker_backend</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="Import-data-to-Oracle"><a href="#Import-data-to-Oracle" class="headerlink" title="Import data to Oracle"></a>Import data to Oracle</h2><p>在 Docker volumn 的部分, 我在 local 規劃了 <code>oradata</code> 與 <code>import_oracle</code> 兩個資料夾,</p><ul><li>ordata 用來放 Oracle 本體, 避免 docker compose down 後, 資料遺失</li><li>import_oracle 用來方便資料庫匯入</li><li>資料匯入匯出的操作, 盡量用 sysdba 的 role 操作</li></ul><h3 id="Export-dev-Oracle"><a href="#Export-dev-Oracle" class="headerlink" title="Export dev Oracle"></a>Export dev Oracle</h3><p>DEV 的 Oracle 是 Oracle Server, 簡單的 SSH 登入後, 把資料匯出後下載<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># expdp explain</span></span><br><span class="line">expdp -<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># expdp 匯出 schema, 匯出的檔案會位於 /u01/app/oracle/admin/EE/dpdump/expdat.dmp</span></span><br><span class="line">expdp \<span class="string">"sys\/your-password as sysdba\" schemas=your-schema</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># download expdat.dmp form dev to import_oracle folder</span></span><br><span class="line"><span class="string">scp user@dev-server:/u01/app/oracle/admin/EE/dpdump/expdat.dmp ~/project/docker/import_oracle</span></span><br></pre></td></tr></table></figure></p><h3 id="Import-expdat-dmp-to-Oracle"><a href="#Import-expdat-dmp-to-Oracle" class="headerlink" title="Import expdat.dmp to Oracle"></a>Import expdat.dmp to Oracle</h3><p>因為用 <code>expdp</code> 操作資料匯出, 所以需要用 <code>impdp</code> 才能對應匯入操作, <code>loliconneko/oracle-ee-11g</code> 預設的帳號密碼</p><ul><li>user: sys / system</li><li>password: oracle</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># execute oracle bash, this instruction will run oracle container bash</span></span><br><span class="line">docker-compose <span class="built_in">exec</span> oracle bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># in oracle container, go to the dpdump will see the expdat.dmp</span></span><br><span class="line"><span class="built_in">cd</span> /u01/app/oracle/admin/EE/dpdump</span><br><span class="line">ls -al</span><br><span class="line"></span><br><span class="line"><span class="comment"># the instruction will scan /u01/app/oracle/admin/EE/dpdump and import expdat.dmp </span></span><br><span class="line">impdp -<span class="built_in">help</span></span><br><span class="line">impdp \<span class="string">"sys\/oracle as sysdba\" schemas=your-schema;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Memo"><a href="#Memo" class="headerlink" title="Memo"></a>Memo</h2><p>在整個轉移過程中其實 trouble shooting 非常多, 但大多皆可於 google 搜尋到對應的解決方式, 但細部的原因我也沒有很理解, Oracle 是個複雜龐大的系統, 我這邊整理一些我遇到的問題, 希望有幫到大家 XD</p><h3 id="1-failed-ORA-28000-the-account-is-locked"><a href="#1-failed-ORA-28000-the-account-is-locked" class="headerlink" title="1. failed: ORA-28000: the account is locked"></a>1. failed: ORA-28000: the account is locked</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> your-<span class="keyword">account</span> <span class="keyword">ACCOUNT</span> <span class="keyword">UNLOCK</span>;</span><br></pre></td></tr></table></figure><h3 id="2-failed-ORA-01000-maximum-open-cursors-exceeded"><a href="#2-failed-ORA-01000-maximum-open-cursors-exceeded" class="headerlink" title="2. failed: ORA-01000:maximum open cursors exceeded."></a>2. failed: ORA-01000:maximum open cursors exceeded.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> open_cursors=<span class="number">1000</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Oracle-Enterprise-11g-Docker-Image&quot;&gt;&lt;a href=&quot;#Oracle-Enterprise-11g-Docker-Image&quot; class=&quot;headerlink&quot; title=&quot;Oracle Enterprise 11g Do
      
    
    </summary>
    
      <category term="dba" scheme="https://jerry80409.github.io/categories/dba/"/>
    
    
      <category term="oracle" scheme="https://jerry80409.github.io/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>plsql_note</title>
    <link href="https://jerry80409.github.io/2019/09/05/plsql-note/"/>
    <id>https://jerry80409.github.io/2019/09/05/plsql-note/</id>
    <published>2019-09-05T07:38:33.000Z</published>
    <updated>2019-09-17T02:58:29.020Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Just-noting"><a href="#Just-noting" class="headerlink" title="Just noting"></a>Just noting</h3><p>Debug 可以考慮用 <code>DBMS_OUTPUT.PUT_LINE(&#39;your-outputs&#39;)</code> 來處理。</p><h3 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h3><p>基本語法結構。<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">  <span class="comment">-- 變數宣告區塊</span></span><br><span class="line">  m_var VARCHAR2(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="comment">-- 主要執行運算區塊</span></span><br><span class="line">  m_var := <span class="string">'HELLO'</span>;</span><br><span class="line">  DBMS_OUTPUT.PUT_LINE(m_var);</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">/</span><br></pre></td></tr></table></figure></p><p>輸出<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">HELLO</span><br></pre></td></tr></table></figure></p><hr><h3 id="Create-Type"><a href="#Create-Type" class="headerlink" title="Create Type"></a>Create Type</h3><p>建立自訂義型別, 類似 Java class 的概念。<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 建立 m_type, 裡面有一個欄位是 bigint 類型</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">TYPE</span> student_type <span class="keyword">AS</span> <span class="keyword">OBJECT</span> (</span><br><span class="line">    s_name VARCHAR2(<span class="number">10</span>),</span><br><span class="line">    s_score <span class="built_in">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">  <span class="comment">-- 宣告 stu 變數, 為 student_type 型別</span></span><br><span class="line">  stu student_type;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="comment">-- 類似 java 的 new instance</span></span><br><span class="line">  stu := student_type(<span class="string">'Dumdum'</span>, <span class="number">100</span>);</span><br><span class="line">  DBMS_OUTPUT.PUT_LINE('My name is ' || stu.s_name);</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure></p><p>輸出</p><ul><li>p.s. 無法直接 output 整個 student_type 物件, 需要指定 attritube 去輸出</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">My name is Dumdum</span><br></pre></td></tr></table></figure><hr><h3 id="Create-Type-as-Table"><a href="#Create-Type-as-Table" class="headerlink" title="Create Type as Table"></a>Create Type as Table</h3><p>建立一個 table 類型的型別, 類似 Java collection 的概念 (泛型)。<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 建立 student_type</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">TYPE</span> student_type <span class="keyword">AS</span> <span class="keyword">OBJECT</span> (</span><br><span class="line">    s_name VARCHAR2(<span class="number">10</span>),</span><br><span class="line">    s_score <span class="built_in">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建立一個裝 student_teyp 的 class_room</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">TYPE</span> class_room <span class="keyword">AS</span> <span class="keyword">TABLE</span> <span class="keyword">OF</span> student_type;</span><br></pre></td></tr></table></figure></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span>  </span><br><span class="line">  <span class="keyword">class</span> class_room := class_room();</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span>  </span><br><span class="line">  <span class="keyword">class</span> := class_room (  </span><br><span class="line">    student_type (<span class="string">'John'</span>, <span class="number">88</span>),  </span><br><span class="line">    student_type (<span class="string">'Max'</span>, <span class="number">90</span>),  </span><br><span class="line">    student_type (<span class="string">'Lin'</span>, <span class="number">100</span>));  </span><br><span class="line"></span><br><span class="line">  class.EXTEND;  </span><br><span class="line">  class(class.LAST) := student_type('Chen', 56);  </span><br><span class="line"></span><br><span class="line">  FOR stu IN (</span><br><span class="line">    <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">TABLE</span>(<span class="keyword">CAST</span>(<span class="keyword">class</span> <span class="keyword">AS</span> CLASS_ROOM))) </span><br><span class="line">  <span class="keyword">LOOP</span></span><br><span class="line">    DBMS_OUTPUT.put_line(<span class="string">'Name = '</span> || stu.s_name || <span class="string">', Score = '</span> || stu.s_score);</span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">LOOP</span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><p>輸出<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Name = John,  Score = 88</span><br><span class="line">Name = Max,   Score = 90</span><br><span class="line">Name = Lin,   Score = 100</span><br><span class="line">Name = Chen,  Score = 56</span><br></pre></td></tr></table></figure></p><hr><h3 id="REGEXP-SUBSTR"><a href="#REGEXP-SUBSTR" class="headerlink" title="REGEXP_SUBSTR()"></a>REGEXP_SUBSTR()</h3><p>用正則表示, 來切割字串。<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">REGEXP_SUBSTR(</span><br><span class="line">  'text',         <span class="comment">-- char     , 要處理的字串</span></span><br><span class="line">  'reg_pattern',  <span class="comment">-- char     , 正則表示 expression</span></span><br><span class="line">  position,       <span class="comment">-- integer  , 正則表示驗證起始位置, 預設為 1</span></span><br><span class="line">  occurrence,     <span class="comment">-- integer  , 指定正則匹配成功後, 哪一個匹配成空要觸發字串切割, 預設為 1</span></span><br><span class="line">  modifier        <span class="comment">-- char     , i:不區分大小寫; c:區分大小寫; 預設為 'c' </span></span><br><span class="line">  )</span><br></pre></td></tr></table></figure></p><p>範例<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  regexp_substr(</span><br><span class="line">    <span class="string">'This is Dumdum'</span>, </span><br><span class="line">    <span class="string">'[[:alpha:]]+'</span>, </span><br><span class="line">    <span class="number">1</span>, </span><br><span class="line">    <span class="number">3</span></span><br><span class="line">  ) the_3th_word</span><br><span class="line"><span class="keyword">FROM</span> dual;</span><br></pre></td></tr></table></figure></p><p>輸出<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| the_3th_word |</span><br><span class="line">|--------------|</span><br><span class="line">| Dumdum       |</span><br></pre></td></tr></table></figure></p><hr><h3 id="REGEXP-SUBSTR-搭配-LEVEL"><a href="#REGEXP-SUBSTR-搭配-LEVEL" class="headerlink" title="REGEXP_SUBSTR() 搭配 LEVEL"></a>REGEXP_SUBSTR() 搭配 LEVEL</h3><p><code>LEVEL</code> 的用途主要是用來標示資料 樹(tree) 結構, 但實際上使用起來不是很直覺。</p><p>範例<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">LEVEL</span>, </span><br><span class="line">  regexp_substr(</span><br><span class="line">    <span class="string">'This is Dumdum testing null'</span>, </span><br><span class="line">    <span class="string">'[[:alpha:]]+'</span>, </span><br><span class="line">    <span class="number">1</span>,  </span><br><span class="line">    <span class="keyword">LEVEL</span>) regexp_substr</span><br><span class="line"><span class="keyword">FROM</span> dual</span><br><span class="line"><span class="comment">-- regexp_count, 用正則表示匹配來計算次數, 下面為例, 用來計算有幾個 '空白', ＋1 後就是實際 word 數量</span></span><br><span class="line"><span class="keyword">CONNECT</span> <span class="keyword">BY</span> <span class="keyword">LEVEL</span> &lt;= regexp_count(<span class="string">'This is Dumdum testing null'</span>,  <span class="string">' '</span>) + <span class="number">1</span>;</span><br></pre></td></tr></table></figure></p><p>輸出<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| LEVEL | REGEXP_SUBSTR |</span><br><span class="line">|-------|---------------|</span><br><span class="line">| 1     | This          |</span><br><span class="line">| 2     | is            |</span><br><span class="line">| 3     | Dumdum        |</span><br><span class="line">| 4     | testing       |</span><br><span class="line">| 5     | null          |</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Just-noting&quot;&gt;&lt;a href=&quot;#Just-noting&quot; class=&quot;headerlink&quot; title=&quot;Just noting&quot;&gt;&lt;/a&gt;Just noting&lt;/h3&gt;&lt;p&gt;Debug 可以考慮用 &lt;code&gt;DBMS_OUTPUT.PUT_
      
    
    </summary>
    
      <category term="dba" scheme="https://jerry80409.github.io/categories/dba/"/>
    
    
      <category term="oracle" scheme="https://jerry80409.github.io/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>我要寫一篇我討厭 Oracle 的原因</title>
    <link href="https://jerry80409.github.io/2019/08/22/i-hate-oracle/"/>
    <id>https://jerry80409.github.io/2019/08/22/i-hate-oracle/</id>
    <published>2019-08-22T10:17:28.000Z</published>
    <updated>2019-08-26T04:14:07.962Z</updated>
    
    <content type="html"><![CDATA[<h3 id="I-hate-the-Oracle"><a href="#I-hate-the-Oracle" class="headerlink" title="I hate the Oracle"></a>I hate the Oracle</h3><p>Oracle 算是老牌的資料庫, 但實在是滿令人挫折的,<br>如果是習慣在 terminal 下操作的使用者, 光 accepted 那個 licence,<br>就讓我覺得自己是一個愚蠢的使用者, 官方的文件又難以快速查詢到想要的,<br>Oracle 版本又很多, 對應不同的 OS 環境又有各種奇奇怪怪的設定方式,<br>光是確認 ORACLE_SID 就浪費了不少時間,<br>config 文件也是用特規的方式去撰寫, 不是 <code>.ymal</code> 也不是 <code>.conf</code> 而是 <code>.ora</code>,<br><code>to_date()</code> 也不走 ISO 規範, 硬要跟別人不一樣…<br>基於各種麻煩的問題, 我真的不喜歡 Oracle</p><hr><h3 id="Env"><a href="#Env" class="headerlink" title="Env"></a>Env</h3><ul><li>CentOS 7   (CentOS Linux release 7.6.1810 (Core))</li><li>Oracle 19c (Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production)</li></ul><hr><h3 id="Difficult-setting"><a href="#Difficult-setting" class="headerlink" title="Difficult setting"></a>Difficult setting</h3><p><strong><a href="https://oracle-base.com/articles/19c/oracle-db-19c-rpm-installation-on-oracle-linux-7" target="_blank" rel="noopener">安裝教學</a></strong>, 這篇算是我找到比較適合我的教學, 我的安裝記錄如下<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立資料夾</span></span><br><span class="line">mkdir -p ~/Download</span><br><span class="line"><span class="built_in">cd</span> ~/Download</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載 rpm</span></span><br><span class="line">curl -o oracle-database-preinstall-19c-1.0-1.el7.x86_64.rpm https://yum.oracle.com/repo/OracleLinux/OL7/latest/x86_64/getPackage/oracle-database-preinstall-19c-1.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝</span></span><br><span class="line">sudo yum -y localinstall oracle-database-preinstall-19c-1.0-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></p><h3 id="Uncomfortable-licence"><a href="#Uncomfortable-licence" class="headerlink" title="Uncomfortable licence"></a>Uncomfortable licence</h3><p>如果想下載官方的 rpm 就要想辦法通過 licence…</p><ol><li><p>acceped and click download<br><img src="/img/i-hate-oracle/oracle-accepted-and-clicked-download.png" alt="get-accepted-licence-url-link"></p></li><li><p>get accepted licence url link<br><img src="/img/i-hate-oracle/get-accepted-licence-url-link.png" alt="get-accepted-licence-url-link"></p></li><li><p>wget</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://download.oracle.com/otn/linux/oracle19c/190000/oracle-databas-ee-19c-1.0-1.x86_64.rpm?AuthParam=some-param</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="Change-the-oracle-user-in-CentOS"><a href="#Change-the-oracle-user-in-CentOS" class="headerlink" title="Change the oracle user in CentOS"></a>Change the oracle user in CentOS</h3><p>如果跟我一樣是手動安裝, 那可能會需要設定一下 oracle 的 <code>passwd</code><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 設定 oracle 這個 user 的密碼</span></span><br><span class="line">sudo passwd oracle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切換 oracle 才能調整 oracle 相關 config</span></span><br><span class="line">su oracle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登入 sqlplus</span></span><br><span class="line">sqlplus / as sysdba</span><br></pre></td></tr></table></figure></p><hr><h3 id="Sqlplus-command-not-found"><a href="#Sqlplus-command-not-found" class="headerlink" title="Sqlplus command not found"></a>Sqlplus command not found</h3><p>如果發生了 <strong>sqlplus command not found</strong> 是因為缺少環境變數, 確認 env<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 確認你的環境變數是否有 ORACLE_BASE, ORACLE_HOME, ORACLE_SID</span></span><br><span class="line">env | grep ORACLE</span><br></pre></td></tr></table></figure></p><p>如果沒有 <code>ORACLE_BASE</code>, <code>ORACLE_HOME</code>, <code>ORACLE_SID</code> 就手動設定一下吧,<br>但我沒辦法保證每個人的環境都跟我的一樣, 在設定時請手動確認一下路徑是不是跟我一樣<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果沒有就手動設定吧</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export ORACLE_BASE=/opt/oracle"</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export ORACLE_HOME=/opt/oracle/product/19c/dbhome_1"</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 這個設定花很多力氣才找到</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export ORACLE_SID=ORCLCDB"</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></p><hr><h3 id="ORA-01034-ORACLE-NOT-AVAILABLE"><a href="#ORA-01034-ORACLE-NOT-AVAILABLE" class="headerlink" title="ORA-01034: ORACLE NOT AVAILABLE"></a>ORA-01034: ORACLE NOT AVAILABLE</h3><p>這個問題是因為 Oracle 環境變數沒有設定好, 因為我找不到 ORACLE_SID<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我也知道可以用 echo, 但就是沒有啊</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ORACLE_SID</span></span><br></pre></td></tr></table></figure></p><p>然後 <a href="http://www.dba-oracle.com/t_find_oracle_sid.htm" target="_blank" rel="noopener">教學</a> 說可以進去資料庫 select, 事實上是 ORACLE_SID 沒設定好, 你也無法用 sqlplus 去做登入, 後來找到可以在 <code>tnsnames.ora</code> 找到 ORACLE_SID<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># my path is /opt/oracle/product/19c/dbhome_1/network/admin/tnsnames.ora</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$ORACLE_HOME</span>/network/admin</span><br><span class="line">cat tnsnames.ora</span><br></pre></td></tr></table></figure></p><h3 id="The-ora-config-file"><a href="#The-ora-config-file" class="headerlink" title="The .ora config file"></a>The .ora config file</h3><p>為了找 ORACLE_SID 翻遍所有文件, 才在某個文件的小小角落翻到</p><blockquote><p>Change the value of ORACLE_SID to your new value in your .profile, .cshrc, .login, oratab, and tnsnames.ora files.</p></blockquote><p>說明 ORACLE_SID 寫在 <strong>.profile</strong>, <strong>.cshrc</strong>, <strong>.login</strong>, <strong>oratab</strong>, <strong>tnsnames.ora</strong>, 只想罵髒話</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ORCLCDB 就是預設的 SID</span></span><br><span class="line">ORCLCDB =</span><br><span class="line">  (DESCRIPTION =</span><br><span class="line">    (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))</span><br><span class="line">    (CONNECT_DATA =</span><br><span class="line">      (SERVER = DEDICATED)</span><br><span class="line">      (SERVICE_NAME = ORCLCDB)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">LISTENER_ORCLCDB =</span><br><span class="line">  (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))</span><br></pre></td></tr></table></figure><hr><h3 id="Unknow-Charset"><a href="#Unknow-Charset" class="headerlink" title="Unknow Charset"></a>Unknow Charset</h3><p>亂碼問題, 必須先找到 CHARSET<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">SQL&gt; select userenv('language') from dual;</span><br><span class="line"></span><br><span class="line">USERENV('LANGUAGE')</span><br><span class="line"><span class="comment">----------------------------------------------------</span></span><br><span class="line">TRADITIONAL CHINESE_TAIWAN.AL32UTF8</span><br></pre></td></tr></table></figure></p><p>再把這個愚蠢的 CHARSET 設定到 ENV<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"export NLS_LANG='TRADITIONAL CHINESE_TAIWAN.AL32UTF8'"</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></p><hr><h3 id="ORA-12541-TNS-no-listener"><a href="#ORA-12541-TNS-no-listener" class="headerlink" title="ORA-12541: TNS:no listener"></a>ORA-12541: TNS:no listener</h3><p>先檢查 CentOS 的防火牆, 記得把 1521 打開<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add port 1521 to firewall</span></span><br><span class="line">sudo firewall-cmd --add-port=1521/tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># list firewall available ports</span></span><br><span class="line">sudo firewall-cmd --list-all</span><br><span class="line"></span><br><span class="line"><span class="comment"># stdout</span></span><br><span class="line">target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: enp3s0</span><br><span class="line">  sources:</span><br><span class="line">  services: ssh dhcpv6-client</span><br><span class="line">  ports: 22/tcp 1521/tcp</span><br><span class="line">  protocols:</span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports:</span><br><span class="line">  <span class="built_in">source</span>-ports:</span><br><span class="line">  icmp-blocks:</span><br><span class="line">  rich rules:</span><br></pre></td></tr></table></figure></p><p>調整 listener.ora 監聽全部打開, 修改 HOST 為 <code>0.0.0.0</code>, 讓遠端的 Client 也可以連線<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改 HOST 為 0.0.0.0 </span></span><br><span class="line">LISTENER =</span><br><span class="line">  (DESCRIPTION_LIST =</span><br><span class="line">    (DESCRIPTION =</span><br><span class="line">      (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521))</span><br><span class="line">      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure></p><p>透過 lsnrctl 重新啟動 listener<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># lsnrctl 工具</span></span><br><span class="line">lsnrctl</span><br><span class="line"></span><br><span class="line">LSNRCTL&gt; reload</span><br><span class="line"></span><br><span class="line">LSNRCTL&gt; stop</span><br><span class="line"></span><br><span class="line">LSNRCTL&gt; start</span><br><span class="line"></span><br><span class="line">LSNRCTL&gt; status</span><br></pre></td></tr></table></figure></p><h4 id="Insert-Records-ORA-01843"><a href="#Insert-Records-ORA-01843" class="headerlink" title="Insert Records : ORA-01843"></a>Insert Records : ORA-01843</h4><p><code>ORA-01843</code> 的錯誤代碼說明是 <strong>不是有效的月份</strong>, 原因是 <code>to_date()</code> 造成的<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">SQL&gt; Insert into EMPLOYEES (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE,HIRE_DATE,MANAGER_ID,JOB_TITLE) values (107,'Summer','Payne','summer.payne@example.com','515.123.8181',to_date('07-JUN-16','DD-MON-RR'),106,'Public Accountant');</span><br><span class="line"></span><br><span class="line">ORA-01843: 不是有效的月份</span><br></pre></td></tr></table></figure></p><p>資料庫就你最特別, 完全不照 ISO 的 Datetime 格式, 硬要自己訂一套, 還要吃 ENV 的 <code>NLS_DATE_LANGUAGE</code><br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">SQL&gt; Insert into EMPLOYEES (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE,HIRE_DATE,MANAGER_ID,JOB_TITLE) values (107,'Summer','Payne','summer.payne@example.com','515.123.8181',to_date('07-JUN-16','DD-MON-RR', 'NLS_DATE_LANGUAGE = AMERICAN'),106,'Public Accountant');</span><br></pre></td></tr></table></figure></p><hr><h4 id="Creaet-user-ORA-00900"><a href="#Creaet-user-ORA-00900" class="headerlink" title="Creaet user : ORA-00900"></a>Creaet user : ORA-00900</h4><p><code>ORA-00900</code> 的錯誤代碼說明是 <strong>SQL 敘述句無效</strong>, 但實際上這樣的錯誤代碼說明有說跟沒說一樣…<br>原因是某些操作的權限不足, 像 <code>SHOW USER</code>, 就只能在 Server 上操作<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">SQL&gt; SHOW USER;</span><br><span class="line"></span><br><span class="line">ORA-00900: SQL 敘述句無效</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;I-hate-the-Oracle&quot;&gt;&lt;a href=&quot;#I-hate-the-Oracle&quot; class=&quot;headerlink&quot; title=&quot;I hate the Oracle&quot;&gt;&lt;/a&gt;I hate the Oracle&lt;/h3&gt;&lt;p&gt;Oracle 算是老
      
    
    </summary>
    
      <category term="dba" scheme="https://jerry80409.github.io/categories/dba/"/>
    
    
      <category term="oracle" scheme="https://jerry80409.github.io/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>ora2pg 安裝</title>
    <link href="https://jerry80409.github.io/2019/08/19/ora2pg-setup/"/>
    <id>https://jerry80409.github.io/2019/08/19/ora2pg-setup/</id>
    <published>2019-08-19T10:20:32.000Z</published>
    <updated>2019-10-17T09:26:06.216Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>在處理 Oracle 遷移到 Postgres …<br>Postgres <a href="https://wiki.postgresql.org/wiki/Converting_from_other_Databases_to_PostgreSQL#Utilities.2C_tools.2C_scripts_etc." target="_blank" rel="noopener">官方</a> 其實提供了許多 Migration tools, 但大部分都需要付費購買, 但這種一次的作業實在很難爭取到公司資源, 在 open source 上相關資源較多的也只有 <code>Ora2pg</code> 與 <code>Orafce</code> 以及 <code>AWS Schema Conversion Tool</code>, 然而這些工具支持的面向皆不一樣, 以下簡單的介紹一下。</p><ul><li><p><strong><a href="http://ora2pg.darold.net/" target="_blank" rel="noopener">Ora2pg</a></strong> - open source, perl 語言, 目前看起來功能最完整的工具支援 Oracle Table, Functaion, Trigger, etc. 轉換, 但設定有點複雜。</p></li><li><p><strong><a href="http://docs.aws.amazon.com/SchemaConversionTool/latest/userguide/CHAP_SchemaConversionTool.Installing.html" target="_blank" rel="noopener">AWS Schema Conversion Tool</a></strong> - AWS 的工具, 個人覺得報表功能很好用, 缺點是沒用 AWS 的服務只能幫你轉 Oracle 的 schema。</p></li><li><p><strong><a href="https://github.com/orafce/orafce" target="_blank" rel="noopener">Orafce</a></strong> - open source, c 語言, 針對 oracle 的 function 與 package 做調整的工具。</p></li><li><p><a href="https://www.spectralcore.com/fullconvert" target="_blank" rel="noopener">fullconvert</a> - 看起來滿完整, 但試用版有滿多限制。</p></li><li><p><a href="https://dbconvert.com/oracle/postgresql/" target="_blank" rel="noopener">Database migration for Oracle and PostgreSQL</a> - 沒有支援 Mac 使用者。</p></li><li><p><a href="http://www.convert-in.com/ora2pgs.htm" target="_blank" rel="noopener">Oracle-to-PostgreSQL</a> - 沒有支援 Mac 使用者。</p></li></ul><h3 id="Install-Perl"><a href="#Install-Perl" class="headerlink" title="Install Perl"></a>Install Perl</h3><ul><li>Ora2pg 由 perl 編寫, 所以需要 perl 環境</li><li>由於體積不大, 所以我直接把 Ora2pg 安裝在 Oracle Server (CentOS)</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check your perl version, </span></span><br><span class="line"><span class="comment"># if it does't work, you should install perl</span></span><br><span class="line">perl -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># setup perl by yum, it's will setup all perl packagies</span></span><br><span class="line">yum install perl*</span><br><span class="line"></span><br><span class="line"><span class="comment"># and setup cpan</span></span><br><span class="line">yum install cpan</span><br><span class="line"></span><br><span class="line"><span class="comment"># then check perl</span></span><br><span class="line">perl -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># this is my perl info</span></span><br><span class="line">This is perl 5, version 16, subversion 3 (v5.16.3) built <span class="keyword">for</span> x86_64-linux-thread-multi</span><br><span class="line">(with 39 registered patches, see perl -V <span class="keyword">for</span> more detail)</span><br><span class="line"></span><br><span class="line">Copyright 1987-2012, Larry Wall</span><br><span class="line"></span><br><span class="line">Perl may be copied only under the terms of either the Artistic License or the</span><br><span class="line">GNU General Public License, <span class="built_in">which</span> may be found <span class="keyword">in</span> the Perl 5 <span class="built_in">source</span> kit.</span><br><span class="line"></span><br><span class="line">Complete documentation <span class="keyword">for</span> Perl, including FAQ lists, should be found on</span><br><span class="line">this system using <span class="string">"man perl"</span> or <span class="string">"perldoc perl"</span>.  If you have access to the</span><br><span class="line">Internet, point your browser at http://www.perl.org/, the Perl Home Page.</span><br></pre></td></tr></table></figure><hr><h3 id="Ora2pg-setup"><a href="#Ora2pg-setup" class="headerlink" title="Ora2pg setup"></a>Ora2pg setup</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install ora2pg v.20</span></span><br><span class="line"><span class="built_in">cd</span> ~/Download</span><br><span class="line">wget https://github.com/darold/ora2pg/archive/v20.0.tar.gz</span><br><span class="line">tar zxvf v20.0.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># make and install</span></span><br><span class="line"><span class="built_in">cd</span> ora2pg-20.0</span><br><span class="line">perl Makefile.PL</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># set env</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"PERL5LIB=<span class="variable">$PERL5LIB</span>:/root/perl5/lib/perl5"</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ORACLE_HOME=<span class="variable">$ORACLE_HOME</span>:/u01/app/oracle/product/11.2.0/EE"</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span>:<span class="variable">$ORACLE_HOME</span>/lib"</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># install DBD:Oracle</span></span><br><span class="line">perl -MCPAN -e <span class="string">'install DBD::Oracle'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># make and install DBD:Oracle</span></span><br><span class="line"><span class="built_in">cd</span> ~/.cpan/build/DBD-Oracle*</span><br><span class="line">perl Makefile.PL</span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 網路上流傳的 check perl XD</span></span><br><span class="line">vim check.pl</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> ExtUtils::Installed;</span><br><span class="line"><span class="keyword">my</span> $inst = ExtUtils::Installed-&gt;new();</span><br><span class="line"><span class="keyword">print</span> <span class="keyword">join</span> <span class="string">"\n"</span>,$inst-&gt;modules();</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 執行看看</span></span><br><span class="line">chmod +x check.pl</span><br><span class="line">perl check.pl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 順利的話, stdout 會輸出</span></span><br><span class="line">DBD::Oracle</span><br><span class="line">Ora2Pg</span><br><span class="line">Perl</span><br><span class="line">Test::NoWarnings</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 確認 Ora2pg version</span></span><br><span class="line">ora2pg -v</span><br><span class="line">Ora2Pg v20.0</span><br></pre></td></tr></table></figure><h3 id="Ora2pg-init-project"><a href="#Ora2pg-init-project" class="headerlink" title="Ora2pg init project"></a>Ora2pg init project</h3><p>官方文件有說明專案式的 Ora2pg<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ora2pg --project_base ~/ora2pg_projects/ --init_project project_name</span><br><span class="line">Creating project test_project.</span><br><span class="line">/app/migration/test_project/</span><br><span class="line">        schema/</span><br><span class="line">                dblinks/</span><br><span class="line">                directories/</span><br><span class="line">                <span class="built_in">functions</span>/</span><br><span class="line">                grants/</span><br><span class="line">                mviews/</span><br><span class="line">                packages/</span><br><span class="line">                partitions/</span><br><span class="line">                procedures/</span><br><span class="line">                sequences/</span><br><span class="line">                synonyms/</span><br><span class="line">                tables/</span><br><span class="line">                tablespaces/</span><br><span class="line">                triggers/</span><br><span class="line">                types/</span><br><span class="line">                views/</span><br><span class="line">        sources/</span><br><span class="line">                <span class="built_in">functions</span>/</span><br><span class="line">                mviews/</span><br><span class="line">                packages/</span><br><span class="line">                partitions/</span><br><span class="line">                procedures/</span><br><span class="line">                triggers/</span><br><span class="line">                types/</span><br><span class="line">                views/</span><br><span class="line">        data/</span><br><span class="line">        config/</span><br><span class="line">        reports/</span><br><span class="line"> </span><br><span class="line">Generating generic configuration file</span><br><span class="line">Creating script export_schema.sh to automate all exports.</span><br><span class="line">Creating script import_all.sh to automate all imports.</span><br></pre></td></tr></table></figure></p><h3 id="Setting-ORACLE-connection"><a href="#Setting-ORACLE-connection" class="headerlink" title="Setting ORACLE connection"></a>Setting ORACLE connection</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ORACLE_DSNdbi:Oracle:host=localhost;sid=EE;port=1521</span><br><span class="line">ORACLE_USERsystem</span><br><span class="line">ORACLE_PWDfoobar</span><br></pre></td></tr></table></figure><h3 id="Export-Import-schema"><a href="#Export-Import-schema" class="headerlink" title="Export / Import schema"></a>Export / Import schema</h3><p><code>--init_project</code> 提供了兩個方便的 scripts 方便作業 </p><ul><li><code>export_schema.sh</code> 用來匯出 data objects schema.</li><li><code>import_all.sh</code> 用來匯入 data objects schema.</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># execute</span></span><br><span class="line">./export_schema.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># stdout</span></span><br><span class="line">[========================&gt;] 52/52 tables (100.0%) end of scanning.</span><br><span class="line">[========================&gt;] 11/11 objects types (100.0%) end of objects auditing.</span><br><span class="line">Running: ora2pg -p -t TABLE -o table.sql -b ./schema/tables -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 52/52 tables (100.0%) end of scanning.</span><br><span class="line">[========================&gt;] 52/52 tables (100.0%) end of table <span class="built_in">export</span>.</span><br><span class="line">Running: ora2pg -p -t PACKAGE -o package.sql -b ./schema/packages -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 1/1 packages (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t VIEW -o view.sql -b ./schema/views -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 views (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t GRANT -o grant.sql -b ./schema/grants -c ./config/ora2pg.conf</span><br><span class="line">WARNING: Exporting privilege as non DBA user is not allowed, see USER_GRANT</span><br><span class="line">Running: ora2pg -p -t SEQUENCE -o sequence.sql -b ./schema/sequences -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 1/1 sequences (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t TRIGGER -o trigger.sql -b ./schema/triggers -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 82/82 triggers (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t FUNCTION -o function.sql -b ./schema/<span class="built_in">functions</span> -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 4/4 <span class="built_in">functions</span> (100.0%) end of <span class="built_in">functions</span> <span class="built_in">export</span>.</span><br><span class="line">Running: ora2pg -p -t PROCEDURE -o procedure.sql -b ./schema/procedures -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 procedures (100.0%) end of procedures <span class="built_in">export</span>.</span><br><span class="line">Running: ora2pg -p -t TABLESPACE -o tablespace.sql -b ./schema/tablespaces -c ./config/ora2pg.conf</span><br><span class="line">WARNING: Exporting tablespace as non DBA user is not allowed, see USER_GRANT</span><br><span class="line">Running: ora2pg -p -t PARTITION -o partition.sql -b ./schema/partitions -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 partitions (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t TYPE -o type.sql -b ./schema/types -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 types (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t MVIEW -o mview.sql -b ./schema/mviews -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 materialized views (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t DBLINK -o dblink.sql -b ./schema/dblinks -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 dblink (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t SYNONYM -o synonym.sql -b ./schema/synonyms -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 synonyms (100.0%) end of output.</span><br><span class="line">Running: ora2pg -p -t DIRECTORY -o directorie.sql -b ./schema/directories -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 directory (100.0%) end of output.</span><br><span class="line">Running: ora2pg -t PACKAGE -o package.sql -b ./sources/packages -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 1/1 packages (100.0%) end of output.</span><br><span class="line">Running: ora2pg -t VIEW -o view.sql -b ./sources/views -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 views (100.0%) end of output.</span><br><span class="line">Running: ora2pg -t TRIGGER -o trigger.sql -b ./sources/triggers -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 82/82 triggers (100.0%) end of output.</span><br><span class="line">Running: ora2pg -t FUNCTION -o function.sql -b ./sources/<span class="built_in">functions</span> -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 4/4 <span class="built_in">functions</span> (100.0%) end of <span class="built_in">functions</span> <span class="built_in">export</span>.</span><br><span class="line">Running: ora2pg -t PROCEDURE -o procedure.sql -b ./sources/procedures -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 procedures (100.0%) end of procedures <span class="built_in">export</span>.</span><br><span class="line">Running: ora2pg -t PARTITION -o partition.sql -b ./sources/partitions -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 partitions (100.0%) end of output.</span><br><span class="line">Running: ora2pg -t TYPE -o type.sql -b ./sources/types -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 types (100.0%) end of output.</span><br><span class="line">Running: ora2pg -t MVIEW -o mview.sql -b ./sources/mviews -c ./config/ora2pg.conf</span><br><span class="line">[========================&gt;] 0/0 materialized views (100.0%) end of output.</span><br><span class="line"></span><br><span class="line">To extract data use the following <span class="built_in">command</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment"># you can follow this command export data</span></span><br><span class="line">ora2pg -t COPY -o data.sql -b ./data -c ./config/ora2pg.conf</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h3&gt;&lt;p&gt;在處理 Oracle 遷移到 Postgres …&lt;br&gt;Postgres &lt;a href=&quot;htt
      
    
    </summary>
    
      <category term="dba" scheme="https://jerry80409.github.io/categories/dba/"/>
    
    
      <category term="oracle" scheme="https://jerry80409.github.io/tags/oracle/"/>
    
      <category term="postgres" scheme="https://jerry80409.github.io/tags/postgres/"/>
    
  </entry>
  
  <entry>
    <title>SSH 登入小技巧</title>
    <link href="https://jerry80409.github.io/2019/08/19/ssh-login-tips/"/>
    <id>https://jerry80409.github.io/2019/08/19/ssh-login-tips/</id>
    <published>2019-08-19T03:04:39.000Z</published>
    <updated>2019-08-19T03:34:02.545Z</updated>
    
    <content type="html"><![CDATA[<h3 id="設定-etc-hosts"><a href="#設定-etc-hosts" class="headerlink" title="設定 /etc/hosts"></a>設定 /etc/hosts</h3><p>此文件是用來做 DNS (Domain-Name-Service), 編輯 <code>/etc/hosts</code> 可以讓機器辨識其他主機, 所以可以給 target server 一個 Domain Name, 方便 Localhost 辨識與登入。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加入一組 </span></span><br><span class="line">192.168.10.10   target.com</span><br></pre></td></tr></table></figure><h3 id="使用-ssh-key"><a href="#使用-ssh-key" class="headerlink" title="使用 ssh-key"></a>使用 ssh-key</h3><p>別再用密碼啦, ssh (Secure SHELL protocol) 本身就是希望你能透過 <code>非對稱金鑰</code> 來進行連線, 非對稱金鑰通常是由一組 <code>public key</code>, <code>private key</code> 組成, 所以先在本地生成一組 ssh key</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh key generated</span></span><br><span class="line">ssh-keygen -t rsa -b 2048</span><br><span class="line"></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/username/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/username/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/username/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure><hr><p>上傳到 target server, 這個動作主要是把 public key 上傳<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id user@target.com</span><br></pre></td></tr></table></figure></p><hr><p>login 就變簡潔了<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh user@target.com</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;設定-etc-hosts&quot;&gt;&lt;a href=&quot;#設定-etc-hosts&quot; class=&quot;headerlink&quot; title=&quot;設定 /etc/hosts&quot;&gt;&lt;/a&gt;設定 /etc/hosts&lt;/h3&gt;&lt;p&gt;此文件是用來做 DNS (Domain-Name-Ser
      
    
    </summary>
    
      <category term="dev_ops" scheme="https://jerry80409.github.io/categories/dev-ops/"/>
    
    
      <category term="ssh" scheme="https://jerry80409.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Oracle 11g 資料匯出與匯入</title>
    <link href="https://jerry80409.github.io/2019/08/16/oracle-impdp-and-expdp/"/>
    <id>https://jerry80409.github.io/2019/08/16/oracle-impdp-and-expdp/</id>
    <published>2019-08-16T03:53:23.000Z</published>
    <updated>2019-08-22T04:39:50.487Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Oracle-11g-sample-database"><a href="#Oracle-11g-sample-database" class="headerlink" title="Oracle 11g sample database"></a>Oracle 11g sample database</h3><p>因為我是用 Docker 建置 Oracle 11g 的環境, 而 Oracle 11g 已經算是舊版, 官方的文件實在很難找到一個只下載 sample database 的地方…</p><p><strong> 參考這個資源 <a href="https://www.oracletutorial.com/getting-started/oracle-sample-database/" target="_blank" rel="noopener">Oracle Sample Database</a> </strong>, </p><p>裡面的 Sample Database 其實是 Oracle 12 之後才有支援的語法, 所以我調整了一下 Schema, 後續的資料匯入再按照該資源的 sql 操作就好了。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- regions</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> regions</span><br><span class="line">  (</span><br><span class="line">    region_id <span class="built_in">NUMBER</span>,</span><br><span class="line">    region_name VARCHAR2( <span class="number">50</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> regions <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_region PRIMARY <span class="keyword">KEY</span> (region_id));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- countries table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> countries</span><br><span class="line">  (</span><br><span class="line">    country_id   <span class="built_in">CHAR</span>( <span class="number">2</span> ) PRIMARY <span class="keyword">KEY</span>  ,</span><br><span class="line">    country_name VARCHAR2( <span class="number">40</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    region_id    <span class="built_in">NUMBER</span>                 , <span class="comment">-- fk</span></span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_countries_regions <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( region_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> regions( region_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"><span class="comment">-- location</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> locations</span><br><span class="line">  (</span><br><span class="line">    location_id <span class="built_in">NUMBER</span>,</span><br><span class="line">    address     VARCHAR2( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    postal_code VARCHAR2( <span class="number">20</span> )          ,</span><br><span class="line">    city        VARCHAR2( <span class="number">50</span> )          ,</span><br><span class="line">    state       VARCHAR2( <span class="number">50</span> )          ,</span><br><span class="line">    country_id  <span class="built_in">CHAR</span>( <span class="number">2</span> )               , <span class="comment">-- fk</span></span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_locations_countries </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( country_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> countries( country_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> locations <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_locations PRIMARY <span class="keyword">KEY</span> (location_id));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- warehouses</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> warehouses</span><br><span class="line">  (</span><br><span class="line">    warehouse_id <span class="built_in">NUMBER</span>, </span><br><span class="line">    warehouse_name <span class="built_in">VARCHAR</span>( <span class="number">255</span> ) ,</span><br><span class="line">    location_id    <span class="built_in">NUMBER</span>( <span class="number">12</span>, <span class="number">0</span> ), <span class="comment">-- fk</span></span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_warehouses_locations </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( location_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> locations( location_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> warehouses <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_warehouses PRIMARY <span class="keyword">KEY</span> (warehouse_id));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- employees</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employees</span><br><span class="line">  (</span><br><span class="line">    employee_id <span class="built_in">NUMBER</span>,</span><br><span class="line">    first_name <span class="built_in">VARCHAR</span>( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    last_name  <span class="built_in">VARCHAR</span>( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    email      <span class="built_in">VARCHAR</span>( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    phone      <span class="built_in">VARCHAR</span>( <span class="number">50</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">    hire_date  <span class="built_in">DATE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>          ,</span><br><span class="line">    manager_id <span class="built_in">NUMBER</span>( <span class="number">12</span>, <span class="number">0</span> )        , <span class="comment">-- fk</span></span><br><span class="line">    job_title  <span class="built_in">VARCHAR</span>( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employees <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_employees PRIMARY <span class="keyword">KEY</span> (employee_id));</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employees <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> fk_employees_manager <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( manager_id ) <span class="keyword">REFERENCES</span> employees( employee_id ) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span>);</span><br><span class="line"><span class="comment">-- CREATE SEQUENCE employees_seq START WITH 1;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- product category</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> product_categories</span><br><span class="line">  (</span><br><span class="line">    category_id <span class="built_in">NUMBER</span>,</span><br><span class="line">    category_name VARCHAR2( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> product_categories <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_product_categories PRIMARY <span class="keyword">KEY</span> (category_id));</span><br><span class="line"><span class="comment">-- CREATE SEQUENCE product_categories_seq START WITH 1;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- products table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> products</span><br><span class="line">  (</span><br><span class="line">    product_id <span class="built_in">NUMBER</span>,</span><br><span class="line">    product_name  VARCHAR2( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    description   VARCHAR2( <span class="number">2000</span> )        ,</span><br><span class="line">    standard_cost <span class="built_in">NUMBER</span>( <span class="number">9</span>, <span class="number">2</span> )          ,</span><br><span class="line">    list_price    <span class="built_in">NUMBER</span>( <span class="number">9</span>, <span class="number">2</span> )          ,</span><br><span class="line">    category_id   <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>         ,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_products_categories </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( category_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> product_categories( category_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> products <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_products PRIMARY <span class="keyword">KEY</span> (product_id));</span><br><span class="line"><span class="comment">-- CREATE SEQUENCE products_seq START WITH 1;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- customers</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customers</span><br><span class="line">  (</span><br><span class="line">    customer_id <span class="built_in">NUMBER</span> ,</span><br><span class="line">    <span class="keyword">name</span>         VARCHAR2( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    address      VARCHAR2( <span class="number">255</span> )         ,</span><br><span class="line">    website      VARCHAR2( <span class="number">255</span> )         ,</span><br><span class="line">    credit_limit <span class="built_in">NUMBER</span>( <span class="number">8</span>, <span class="number">2</span> )</span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> customers <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_customers PRIMARY <span class="keyword">KEY</span> (customer_id));</span><br><span class="line"><span class="comment">-- CREATE SEQUENCE customers_seq START WITH 1;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- contacts</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> contacts</span><br><span class="line">  (</span><br><span class="line">    contact_id <span class="built_in">NUMBER</span>, </span><br><span class="line">    first_name  VARCHAR2( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    last_name   VARCHAR2( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    email       VARCHAR2( <span class="number">255</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    phone       VARCHAR2( <span class="number">20</span> )          ,</span><br><span class="line">    customer_id <span class="built_in">NUMBER</span>                  ,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_contacts_customers </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( customer_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> customers( customer_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> contacts <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_contacts PRIMARY <span class="keyword">KEY</span> (contact_id));</span><br><span class="line"><span class="comment">-- CREATE SEQUENCE contacts_seq START WITH 1;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- orders table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders</span><br><span class="line">  (</span><br><span class="line">    order_id <span class="built_in">NUMBER</span>, </span><br><span class="line">    customer_id <span class="built_in">NUMBER</span>( <span class="number">6</span>, <span class="number">0</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>, <span class="comment">-- fk</span></span><br><span class="line">    <span class="keyword">status</span>      <span class="built_in">VARCHAR</span>( <span class="number">20</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">    salesman_id <span class="built_in">NUMBER</span>( <span class="number">6</span>, <span class="number">0</span> )         , <span class="comment">-- fk</span></span><br><span class="line">    order_date  <span class="built_in">DATE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>          ,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_orders_customers </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( customer_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> customers( customer_id )</span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_orders_employees </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( salesman_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> employees( employee_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="literal">NULL</span></span><br><span class="line">  );</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> orders <span class="keyword">ADD</span> (<span class="keyword">CONSTRAINT</span> pk_orders PRIMARY <span class="keyword">KEY</span> (order_id));</span><br><span class="line"><span class="comment">-- CREATE SEQUENCE orders_seq START WITH 1;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- order items</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> order_items</span><br><span class="line">  (</span><br><span class="line">    order_id   <span class="built_in">NUMBER</span>( <span class="number">12</span>, <span class="number">0</span> )                                , <span class="comment">-- fk</span></span><br><span class="line">    item_id    <span class="built_in">NUMBER</span>( <span class="number">12</span>, <span class="number">0</span> )                                ,</span><br><span class="line">    product_id <span class="built_in">NUMBER</span>( <span class="number">12</span>, <span class="number">0</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>                       , <span class="comment">-- fk</span></span><br><span class="line">    quantity   <span class="built_in">NUMBER</span>( <span class="number">8</span>, <span class="number">2</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>                        ,</span><br><span class="line">    unit_price <span class="built_in">NUMBER</span>( <span class="number">8</span>, <span class="number">2</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>                        ,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> pk_order_items </span><br><span class="line">      PRIMARY <span class="keyword">KEY</span>( order_id, item_id ),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_order_items_products </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( product_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> products( product_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_order_items_orders </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( order_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> orders( order_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"><span class="comment">-- inventories</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> inventories</span><br><span class="line">  (</span><br><span class="line">    product_id   <span class="built_in">NUMBER</span>( <span class="number">12</span>, <span class="number">0</span> )        , <span class="comment">-- fk</span></span><br><span class="line">    warehouse_id <span class="built_in">NUMBER</span>( <span class="number">12</span>, <span class="number">0</span> )        , <span class="comment">-- fk</span></span><br><span class="line">    quantity     <span class="built_in">NUMBER</span>( <span class="number">8</span>, <span class="number">0</span> ) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> pk_inventories </span><br><span class="line">      PRIMARY <span class="keyword">KEY</span>( product_id, warehouse_id ),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_inventories_products </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( product_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> products( product_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_inventories_warehouses </span><br><span class="line">      <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>( warehouse_id )</span><br><span class="line">      <span class="keyword">REFERENCES</span> warehouses( warehouse_id ) </span><br><span class="line">      <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">  );</span><br></pre></td></tr></table></figure><p><br></p><h3 id="Expdp"><a href="#Expdp" class="headerlink" title="Expdp"></a>Expdp</h3><p>我不太確定每個 Oracle Server 的環境是否都是這個路徑, 建議在參考這份紀錄的時候, 先確定一下自己的 Oracle 環境<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check $ORACLE_HOME</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$ORACLE_HOME</span>"</span></span><br><span class="line">/u01/app/oracle/product/11.2.0/EE</span><br></pre></td></tr></table></figure></p><h4 id="DATA-PUMP-DIR"><a href="#DATA-PUMP-DIR" class="headerlink" title="DATA_PUMP_DIR"></a>DATA_PUMP_DIR</h4><p><code>expdp</code> 指令是用來匯出資料的, 預設的匯出位置是 <code>DATA_PUMP_DIR</code>, 這個位置可以透過 select 查詢, 這份紀錄的 DATA_PUMP_DIR 是 <strong>/u01/app/oracle/admin/EE/dpdump/</strong>, 表示資料的匯入匯出預設 dmp 檔案會輸出到該路徑。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">SQL&gt; select * from ALL_DIRECTORIES;</span><br><span class="line"></span><br><span class="line">OWNER       DIRECTORY_NAME</span><br><span class="line"><span class="comment">------------------------------ ------------------------------</span></span><br><span class="line">DIRECTORY_PATH</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">SYS       XMLDIR</span><br><span class="line">/ade/b/2125410156/oracle/rdbms/xml</span><br><span class="line"></span><br><span class="line">SYS       IMPDP</span><br><span class="line">/docker-entrypoint-initdb.d</span><br><span class="line"></span><br><span class="line">SYS       DATA_PUMP_DIR</span><br><span class="line">/u01/app/oracle/admin/EE/dpdump/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OWNER       DIRECTORY_NAME</span><br><span class="line"><span class="comment">------------------------------ ------------------------------</span></span><br><span class="line">DIRECTORY_PATH</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">SYS       ORACLE_OCM_CONFIG_DIR</span><br><span class="line">/u01/app/oracle/product/11.2.0/EE/ccr/state</span><br></pre></td></tr></table></figure><h4 id="expdp-用法"><a href="#expdp-用法" class="headerlink" title="expdp 用法"></a>expdp 用法</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 顯示操作文件</span></span><br><span class="line">expdp -<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 基本的用法 expdp [username/pwd] DIRECTORY=dmpdir DUMPFILE=scott.dmp</span></span><br><span class="line">Example: expdp scott/tiger DIRECTORY=dmpdir DUMPFILE=scott.dmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用範例, 是透過 key=value 的方式去操作參數</span></span><br><span class="line">...</span><br><span class="line">Format:  expdp KEYWORD=value or KEYWORD=(value1,value2,...,valueN)</span><br><span class="line">Example: expdp scott/tiger DUMPFILE=scott.dmp DIRECTORY=dmpdir SCHEMAS=scott</span><br><span class="line">               or TABLES=(T1:P1,T1:P2), <span class="keyword">if</span> T1 is partitioned table</span><br></pre></td></tr></table></figure><hr><p>在操作 expdp 是需要 <code>EXP_FULL_DATABASE</code> 的角色(Role), 可以用 DBA 查詢 USER 相關權限…<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看 user 或 role 系統權限</span></span><br><span class="line">SQL&gt; SELECT * FROM DBA_SYS_PRIVS</span><br><span class="line">    WHERE GRANTEE = 'OT';</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看 user 系統 objects(table, index, seq, etc.) 使用權限</span></span><br><span class="line">SQL&gt; SELECT * FROM DBA_TAB_PRIVS</span><br><span class="line">    WHERE GRANTEE = 'EXP_FULL_DATABASE';</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看 user 擁有的 role</span></span><br><span class="line">SQL&gt; SELECT * FROM DBA_ROLE_PRIVS</span><br><span class="line">    WHERE GRANTEE = 'OT';</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 授權 EXP_FULL_DATABASE role</span></span><br><span class="line">SQL&gt; GRANT EXP_FULL_DATABASE TO OT;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果嫌麻煩就直接給 DBA 的角色吧（測試環境）</span></span><br><span class="line">SQL&gt; GRANT DBA TO OT;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 匯出 OT schema 的所有資料</span></span><br><span class="line">expdp OT/PASSWORD \</span><br><span class="line">    full=y \</span><br><span class="line">    schemas=OT \</span><br><span class="line">    dumpfile=expdp.dmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 會在 /u01/app/oracle/admin/EE/dpdump/ 看到匯出的 dmp file</span></span><br><span class="line">ls /u01/app/oracle/admin/EE/dpdump/</span><br></pre></td></tr></table></figure><h3 id="impdp-用法"><a href="#impdp-用法" class="headerlink" title="impdp 用法"></a>impdp 用法</h3><p>一樣需要 <code>DATAPUMP_IMP_FULL_DATABASE</code> 的角色,<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 授權 DATAPUMP_IMP_FULL_DATABASE role</span></span><br><span class="line">SQL&gt; GRANT DATAPUMP_IMP_FULL_DATABASE TO OT;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 匯入</span></span><br><span class="line">impdp OT/PASSWORD \</span><br><span class="line">    full=y \</span><br><span class="line">    schemas=WMS \</span><br><span class="line">    dumpfile=expdp.dmp</span><br></pre></td></tr></table></figure><hr><p>若有需要 TABLESPACE<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">SQL&gt; CREATE BIGFILE TABLESPACE "OT_DATA" DATAFILE '/u01/app/oracle/oradata/EE/ot_data01.dbf' SIZE 1G AUTOEXTEND ON NEXT 1G MAXSIZE UNLIMITED LOGGING EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO;</span><br></pre></td></tr></table></figure></p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://www.oracletutorial.com/getting-started/oracle-sample-database/" target="_blank" rel="noopener">Oracle Sample Database</a></li><li><a href="http://sergeivovk.com/walkthrough-creating-an-oracle-database-docker-image.html" target="_blank" rel="noopener">Creating an Oracle Database</a></li><li><a href="https://docs.oracle.com/cd/E11882_01/server.112/e22490/dp_import.htm" target="_blank" rel="noopener">Oracle Docs</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Oracle-11g-sample-database&quot;&gt;&lt;a href=&quot;#Oracle-11g-sample-database&quot; class=&quot;headerlink&quot; title=&quot;Oracle 11g sample database&quot;&gt;&lt;/a&gt;Oracle 1
      
    
    </summary>
    
      <category term="dba" scheme="https://jerry80409.github.io/categories/dba/"/>
    
    
      <category term="oracle" scheme="https://jerry80409.github.io/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>clean-and-pre-process-csv</title>
    <link href="https://jerry80409.github.io/2019/08/02/clean-and-pre-process-csv/"/>
    <id>https://jerry80409.github.io/2019/08/02/clean-and-pre-process-csv/</id>
    <published>2019-08-02T06:04:17.000Z</published>
    <updated>2019-08-03T06:24:55.864Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Open-CSV-features"><a href="#Open-CSV-features" class="headerlink" title="Open-CSV features"></a>Open-CSV features</h3><p>I recommed <a href="http://opencsv.sourceforge.net/#features" target="_blank" rel="noopener">open-csv</a>, It’s a nice and aweasome package :)</p><ul><li>Arbitrary numbers of values per line. （允許一行裡面有多個 elements, 避免跟 headers 對應問題）</li><li>Ignoring commas in quoted elements. (忽略 element 裡面的逗號, 避免誤判)</li><li>Handling quoted entries with embedded carriage returns (i.e. entries that span multiple lines). (忽略 element 裡面的換行符號)</li><li>Configurable separator and quote characters (or use sensible defaults). （可自定義 separator 與 quote 切分 csv 的字符）</li></ul><h3 id="Ugly-data"><a href="#Ugly-data" class="headerlink" title="Ugly data"></a>Ugly data</h3><p>雖然 open-csv 可以協助處理 element 裡面的 <strong>逗號</strong>, <strong>換行</strong> 的情境, 但一些狀態仍可能導致 open-csv 判讀錯誤失敗, 以下方的例子來說, <code>\&quot;</code> 與 <code>say &quot;don’t</code> 就會違反 open-csv 的 parsing rule, 導致 exception 發生, 如果是用 try catch 去處理, 就會造成資料缺漏, 違反資料正確性。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;id&quot;,&quot;title&quot;,&quot;member&quot;,&quot;msg&quot;</span><br><span class="line">&quot;1&quot;,&quot;title1&quot;,&quot;eric&quot;,&quot;Hello, I&apos;m Eric.&quot;</span><br><span class="line">&quot;2&quot;,&quot;title2&quot;,&quot;john&quot;,&quot;Hello, Eric, I have a question about your work, </span><br><span class="line"> plz contact me \&quot;</span><br><span class="line">&quot;3&quot;,&quot;title3&quot;,&quot;mike&quot;,&quot;This is Mike, I just want to say &quot;don’t try to be someone you are not meant to be.&quot;&quot;</span><br><span class="line">&quot;4&quot;,&quot;title4&quot;,&quot;jerry&quot;,NA</span><br></pre></td></tr></table></figure></p><h3 id="Clean-data"><a href="#Clean-data" class="headerlink" title="Clean data"></a>Clean data</h3><p>初步的想法就是, 把資料清洗一次, 先移除掉換行符號, 再把會影響 open-csv 處理的因素做 <code>replace()</code> 處理。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clean_data</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    Charset utf8 = Charset.defaultCharset();</span><br><span class="line">    File originFile = ResourceUtils.getFile(<span class="string">"sample.csv"</span>);</span><br><span class="line">    File cleanFile = ResourceUtils.getFile(<span class="string">"clean_sample.csv"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (BufferedReader reader = Files.newBufferedReader(originFile.toPath(), utf8);</span><br><span class="line">         BufferedWriter writer = Files.newBufferedWriter(cleanFile.toPath(), utf8)) &#123;</span><br><span class="line">        String line;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            line = line.replace(<span class="string">",NA,"</span>, <span class="string">",\"-\","</span>);</span><br><span class="line">            line = line.replace(<span class="string">",NA"</span>, <span class="string">",\"-\""</span>);</span><br><span class="line">            line = line.replace(<span class="string">" \""</span>, <span class="string">" `"</span>);</span><br><span class="line">            line = line.replace(<span class="string">"\"\""</span>, <span class="string">"`\""</span>);</span><br><span class="line">            line = line.replace(<span class="string">"\\\""</span>, <span class="string">"\""</span>);</span><br><span class="line"></span><br><span class="line">            line = line.replaceAll(<span class="string">"\\r\\n|\\r|\\n"</span>, <span class="string">""</span>);</span><br><span class="line">            writer.append(line);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>再重新換行。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clean_data_with_new_line</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    File originFile = ResourceUtils.getFile(<span class="string">"classpath:data/clean_sample.csv"</span>);</span><br><span class="line">    File cleanFile = ResourceUtils.getFile(<span class="string">"new_line_sample.csv"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (Reader reader = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(originFile));</span><br><span class="line">         Writer writer = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(cleanFile))) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// in one line have three comm</span></span><br><span class="line">        <span class="keyword">int</span> commInLine = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> current;</span><br><span class="line">        <span class="keyword">int</span> countComm = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">boolean</span> shouldNewLine = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> currentChar;</span><br><span class="line">        <span class="keyword">char</span> beforeChar = <span class="string">' '</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((current = reader.read())!=-<span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">            currentChar = (<span class="keyword">char</span>) current;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// two double quotation </span></span><br><span class="line">            <span class="keyword">if</span> (shouldNewLine</span><br><span class="line">                    &amp;&amp; beforeChar==<span class="string">'"'</span></span><br><span class="line">                    &amp;&amp; currentChar==<span class="string">'"'</span>) &#123;</span><br><span class="line"></span><br><span class="line">                writer.append(<span class="string">"\n"</span>);</span><br><span class="line">                writer.append(currentChar);</span><br><span class="line">                shouldNewLine = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                writer.append(currentChar);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// count comm and check new line status</span></span><br><span class="line">            <span class="keyword">if</span> (currentChar == <span class="string">','</span>) &#123;</span><br><span class="line">                countComm++;</span><br><span class="line">                <span class="keyword">if</span> (countComm == commInLine) &#123;</span><br><span class="line">                    countComm = <span class="number">0</span>;</span><br><span class="line">                    shouldNewLine = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            beforeChar = (<span class="keyword">char</span>) current;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Final-data"><a href="#Final-data" class="headerlink" title="Final data"></a>Final data</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;id&quot;,&quot;title&quot;,&quot;member&quot;,&quot;msg&quot;</span><br><span class="line">&quot;1&quot;,&quot;title1&quot;,&quot;eric&quot;,&quot;Hello, I&apos;m Eric.&quot;</span><br><span class="line">&quot;2&quot;,&quot;title2&quot;,&quot;john&quot;,&quot;Hello, Eric, I have a question about your work, plz contact me &quot;</span><br><span class="line">&quot;3&quot;,&quot;title3&quot;,&quot;mike&quot;,&quot;This is Mike, I just want to say `don’t try to be someone you are not meant to be.`&quot;</span><br><span class="line">&quot;4&quot;,&quot;title4&quot;,&quot;jerry&quot;,&quot;-&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Open-CSV-features&quot;&gt;&lt;a href=&quot;#Open-CSV-features&quot; class=&quot;headerlink&quot; title=&quot;Open-CSV features&quot;&gt;&lt;/a&gt;Open-CSV features&lt;/h3&gt;&lt;p&gt;I recommed
      
    
    </summary>
    
      <category term="misc" scheme="https://jerry80409.github.io/categories/misc/"/>
    
    
      <category term="open-csv" scheme="https://jerry80409.github.io/tags/open-csv/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate DDL Syntax Error</title>
    <link href="https://jerry80409.github.io/2019/02/27/hibernate-sql-syntax-error/"/>
    <id>https://jerry80409.github.io/2019/02/27/hibernate-sql-syntax-error/</id>
    <published>2019-02-27T08:40:35.000Z</published>
    <updated>2019-02-27T09:02:25.297Z</updated>
    
    <content type="html"><![CDATA[<h3 id="I-got-an-error"><a href="#I-got-an-error" class="headerlink" title="I got an error"></a>I got an error</h3><p>When I created an <code>order</code> table, just like …</p><h4 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">$&#123;database.username&#125;</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">$&#123;database.password&#125;</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://$&#123;database.host&#125;:3306/$&#123;database.name&#125;?characterEncoding=utf-8&amp;useUnicode=true&amp;useSSL=false&amp;rewriteBatchedStatements=TRUE</span></span><br><span class="line"><span class="attr">  jpa:</span></span><br><span class="line"><span class="attr">    database:</span> <span class="string">MYSQL</span></span><br><span class="line">    <span class="string">hibernate.ddl-auto:</span> <span class="string">update</span></span><br><span class="line"><span class="attr">    show-sql:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    database-platform:</span> <span class="string">com.example.springtransactionisolation.config.MySQL5InnoDBDialectUtf8mb4</span></span><br><span class="line">    <span class="string">properties.hibernate.jdbc.batch_size:</span> <span class="number">100</span></span><br><span class="line">    <span class="string">properties.hibernate.show_sql:</span> <span class="string">$&#123;spring.jpa.show-sql&#125;</span></span><br><span class="line">    <span class="string">properties.hibernate.format_sql:</span> <span class="string">$&#123;spring.jpa.show-sql&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">logging.level.org.hibernate.SQL:</span> <span class="string">debug</span></span><br><span class="line"><span class="string">logging.level.org.hibernate.type:</span> <span class="string">trace</span></span><br></pre></td></tr></table></figure><h4 id="entity"><a href="#entity" class="headerlink" title="entity"></a>entity</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"order"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"id"</span>, nullable = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Enumerated</span>(EnumType.STRING)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"order_status"</span>, nullable = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> OrderStatus orderStatus;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"update_date"</span>, nullable = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> LocalDate updateDate;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Sql-syntax-log"><a href="#Sql-syntax-log" class="headerlink" title="Sql syntax log"></a>Sql syntax log</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2019-02-27 16:30:57.626  WARN 73285 --- [           main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting <span class="built_in">command</span> : Error executing DDL <span class="string">"</span></span><br><span class="line"><span class="string">    create table order (</span></span><br><span class="line"><span class="string">       id bigint not null auto_increment,</span></span><br><span class="line"><span class="string">        order_status varchar(255) not null,</span></span><br><span class="line"><span class="string">        update_date date not null,</span></span><br><span class="line"><span class="string">        primary key (id)</span></span><br><span class="line"><span class="string">    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;"</span> via JDBC Statement</span><br></pre></td></tr></table></figure><h3 id="Soluation"><a href="#Soluation" class="headerlink" title="Soluation"></a>Soluation</h3><p>Because the sql table <code>order</code> is a <a href="https://dev.mysql.com/doc/refman/8.0/en/keywords.html#keywords-8-0-detailed-U" target="_blank" rel="noopener">reserved word in MySQL</a> so that hibernate sql syntax executed error.</p><p>So I renamed the <code>order</code> entity to <code>order_form</code>…<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"order_form"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderForm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"id"</span>, nullable = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Enumerated</span>(EnumType.STRING)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"order_status"</span>, nullable = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> OrderStatus orderStatus;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"update_date"</span>, nullable = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">private</span> LocalDate updateDate;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在命名 table 或 column 的時候真的不能太隨便啊…</p><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li>MySQL Docs - <a href="https://dev.mysql.com/doc/refman/8.0/en/keywords.html#keywords-8-0-detailed-U" target="_blank" rel="noopener">Reserved word in MySQL</a></li><li>Same Issue - <a href="https://stackoverflow.com/questions/50727853/you-have-an-error-in-your-sql-syntax-hibernate-and-mysql" target="_blank" rel="noopener">StackOverFlow</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;I-got-an-error&quot;&gt;&lt;a href=&quot;#I-got-an-error&quot; class=&quot;headerlink&quot; title=&quot;I got an error&quot;&gt;&lt;/a&gt;I got an error&lt;/h3&gt;&lt;p&gt;When I created an &lt;cod
      
    
    </summary>
    
      <category term="spring-boot" scheme="https://jerry80409.github.io/categories/spring-boot/"/>
    
    
      <category term="mysql" scheme="https://jerry80409.github.io/tags/mysql/"/>
    
      <category term="spring-boot" scheme="https://jerry80409.github.io/tags/spring-boot/"/>
    
      <category term="spring-data" scheme="https://jerry80409.github.io/tags/spring-data/"/>
    
      <category term="jpa" scheme="https://jerry80409.github.io/tags/jpa/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot JPA transactional rollback failed</title>
    <link href="https://jerry80409.github.io/2019/02/19/jpa-transactional-rollback/"/>
    <id>https://jerry80409.github.io/2019/02/19/jpa-transactional-rollback/</id>
    <published>2019-02-19T04:21:17.000Z</published>
    <updated>2019-02-19T05:50:24.526Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原因一-沒有指定-spring-jpa-database-platform"><a href="#原因一-沒有指定-spring-jpa-database-platform" class="headerlink" title="原因一, 沒有指定 spring.jpa.database-platform"></a>原因一, 沒有指定 spring.jpa.database-platform</h3><p>如果用了 <code>hibernate.ddl-auto</code>, 會自動選用 <strong>MyISAM</strong> engine 來建立 table schema, 然而 MyISAM 是不支援 Transactional 的, 自然沒有 rollback 功能, 且 spring boot 也不會給你任何警告, <strong>雷爆了!!!</strong></p><p>因此指定 <code>database-platform: org.hibernate.dialect.MySQL5InnoDBDialect</code> 很重要。</p><p>application.yml 修正為<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">jpa:</span></span><br><span class="line"><span class="attr">    database:</span> <span class="string">MYSQL</span></span><br><span class="line">    <span class="string">hibernate.ddl-auto:</span> <span class="string">update</span></span><br><span class="line"><span class="attr">    show-sql:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    database-platform:</span> <span class="string">org.hibernate.dialect.MySQL5InnoDBDialect</span></span><br></pre></td></tr></table></figure></p><p><img src="/img/jpa-transactional-rollback/my-isam-features.png" alt="my-isam-features"></p><h3 id="原因二-沒有指定-rollbackfor"><a href="#原因二-沒有指定-rollbackfor" class="headerlink" title="原因二, 沒有指定 rollbackfor"></a>原因二, 沒有指定 rollbackfor</h3><blockquote><p>In its default configuration, the Spring Framework’s transaction infrastructure code only marks a transaction for rollback in the case of runtime, unchecked exceptions; that is, when the thrown exception is an instance or subclass of <strong>RuntimeException</strong>. ( Errors will also - by default - result in a rollback). Checked exceptions that are thrown from a transactional method do not result in rollback in the default configuration.</p></blockquote><p><code>@Transactional</code> 預設只對 RuntimeException 有反應, 還有繼承 RuntimeException 的層級, 若沒有特別指定 <code>rollbackfor = Exception.class</code> 屬性, 則不會有動作。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springtransactionisolation.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springtransactionisolation.entity.Employee;</span><br><span class="line"><span class="keyword">import</span> com.example.springtransactionisolation.repository.EmployeeRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EmployeeRepository repository;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EmployeeService</span><span class="params">(EmployeeRepository repository)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.repository = repository;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = Exception.class)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchCreated</span><span class="params">(List&lt;Employee&gt; employees)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        repository.saveAll(employees);</span><br><span class="line">        employees.clear();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// rollback failed</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Oops"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="手動-rollback"><a href="#手動-rollback" class="headerlink" title="手動 rollback"></a>手動 rollback</h3><p>手動 rollback 可以寫成這樣, 參考官方 <a href="https://docs.spring.io/spring/docs/4.2.x/spring-framework-reference/html/transaction.html#transaction-declarative-rolling-back" target="_blank" rel="noopener">文件</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchCreated</span><span class="params">(List&lt;Employee&gt; employees)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        repository.saveAll(employees);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"oops"</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception updateEmployeeExp) &#123;</span><br><span class="line">        System.out.println(<span class="string">"Do rollback transaction status"</span>);</span><br><span class="line">        TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// notify someone</span></span><br><span class="line">            </span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        employees.clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Data-too-long-測試"><a href="#Data-too-long-測試" class="headerlink" title="Data too long 測試"></a>Data too long 測試</h3><p>另外, 在 insert 的時候, 如果發生 <code>DataException</code> 也是繼承於 RuntimeException, 所以沒有特別指定 <code>rollbackfor</code> 也是會整批 rollback。</p><p>Sample data 測試<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"birthDate"</span>: <span class="string">"1989-02-22"</span>,</span><br><span class="line">        <span class="attr">"firstName"</span>: <span class="string">"Tom"</span>,</span><br><span class="line">        <span class="attr">"lastName"</span>: <span class="string">"Lin"</span>,</span><br><span class="line">        <span class="attr">"gender"</span>: <span class="string">"M"</span>,</span><br><span class="line">        <span class="attr">"hireDate"</span>: <span class="string">"2019-02-10"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"birthDate"</span>: <span class="string">"1985-05-25"</span>,</span><br><span class="line">        <span class="attr">"firstName"</span>: <span class="string">"Judy"</span>,</span><br><span class="line">        <span class="attr">"lastName"</span>: <span class="string">"Chen"</span>,</span><br><span class="line">        <span class="attr">"gender"</span>: <span class="string">"F"</span>,</span><br><span class="line">        <span class="attr">"hireDate"</span>: <span class="string">"2019-02-10"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"birthDate"</span>: <span class="string">"1987-12-25"</span>,</span><br><span class="line">        <span class="attr">"firstName"</span>: <span class="string">"my name is so loooooooooooooooooooooooooooooooooooooooooooooon"</span>,</span><br><span class="line">        <span class="attr">"lastName"</span>: <span class="string">"Wu"</span>,</span><br><span class="line">        <span class="attr">"gender"</span>: <span class="string">"M"</span>,</span><br><span class="line">        <span class="attr">"hireDate"</span>: <span class="string">"2019-02-10"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2019-02-19 13:24:51.796  WARN 61330 --- [nio-8080-exec-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1406, SQLState: 22001</span><br><span class="line">2019-02-19 13:24:51.796 ERROR 61330 --- [nio-8080-exec-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Data truncation: Data too long <span class="keyword">for</span> column <span class="string">'first_name'</span> at row 1</span><br><span class="line">2019-02-19 13:24:51.807 ERROR 61330 --- [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() <span class="keyword">for</span> servlet [dispatcherServlet] <span class="keyword">in</span> context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement] with root cause</span><br><span class="line"></span><br><span class="line">com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long <span class="keyword">for</span> column <span class="string">'first_name'</span> at row 1</span><br></pre></td></tr></table></figure><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://docs.spring.io/spring/docs/4.2.x/spring-framework-reference/html/transaction.html#transaction-declarative-rolling-back" target="_blank" rel="noopener">spring boot docs - transaction-declarative-rolling-back</a></li><li><a href="https://dev.mysql.com/doc/refman/5.6/en/myisam-storage-engine.html" target="_blank" rel="noopener">mysql docs - MyISAM Storage Engine Features</a></li><li><a href="https://stackoverflow.com/questions/1459265/hibernate-create-mysql-innodb-tables-instead-of-myisam" target="_blank" rel="noopener">stackoverflow - Create Mysql InnoDB tables instead of MyISAM</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;原因一-沒有指定-spring-jpa-database-platform&quot;&gt;&lt;a href=&quot;#原因一-沒有指定-spring-jpa-database-platform&quot; class=&quot;headerlink&quot; title=&quot;原因一, 沒有指定 spring.j
      
    
    </summary>
    
      <category term="spring-boot" scheme="https://jerry80409.github.io/categories/spring-boot/"/>
    
    
      <category term="spring-boot" scheme="https://jerry80409.github.io/tags/spring-boot/"/>
    
      <category term="spring-data" scheme="https://jerry80409.github.io/tags/spring-data/"/>
    
      <category term="jpa" scheme="https://jerry80409.github.io/tags/jpa/"/>
    
  </entry>
  
</feed>
