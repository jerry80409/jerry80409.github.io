<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PAWS</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jerry80409.github.io/"/>
  <updated>2018-12-12T08:54:56.728Z</updated>
  <id>https://jerry80409.github.io/</id>
  
  <author>
    <name>jerry80409</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>leet-code-021-merge-two-sorted-lists</title>
    <link href="https://jerry80409.github.io/2018/12/12/leet-code-021-merge-two-sorted-lists/"/>
    <id>https://jerry80409.github.io/2018/12/12/leet-code-021-merge-two-sorted-lists/</id>
    <published>2018-12-12T04:51:36.000Z</published>
    <updated>2018-12-12T08:54:56.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergeTwoSortedListsTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> MergeTwoSortedLists mergeTwoSortedLists = <span class="keyword">new</span> MergeTwoSortedLists();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n2);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(<span class="number">0</span>, act.val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n2);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>, act.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">2</span>, act.next.val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n2);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>, act.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">2</span>, act.next.val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">new</span> ListNode(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n3 = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n4 = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        n2.next = n3;</span><br><span class="line">        n3.next = n4;</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n2);</span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>, act.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">2</span>, act.next.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">4</span>, act.next.next.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">5</span>, act.next.next.next.val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">new</span> ListNode(-<span class="number">9</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        n1.next = n2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> ListNode n3 = <span class="keyword">new</span> ListNode(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n4 = <span class="keyword">new</span> ListNode(<span class="number">7</span>);</span><br><span class="line">        n3.next = n4;</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n3);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(-<span class="number">9</span>, act.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">3</span>, act.next.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">5</span>, act.next.next.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">7</span>, act.next.next.next.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * https://leetcode.com/problems/merge-two-sorted-lists/</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Example:</span></span><br><span class="line"><span class="comment"> * Input: 1-&gt;2-&gt;4, 1-&gt;3-&gt;4</span></span><br><span class="line"><span class="comment"> * Output: 1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergeTwoSortedLists</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode n1, ListNode n2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Objects.isNull(n1)) <span class="keyword">return</span> n2;</span><br><span class="line">        <span class="keyword">if</span> (Objects.isNull(n2)) <span class="keyword">return</span> n1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n1.val &lt; n2.val) &#123;</span><br><span class="line">            n1.next = mergeTwoLists(n2, n1.next);</span><br><span class="line">            <span class="keyword">return</span> n1;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            n2.next = mergeTwoLists(n1, n2.next);</span><br><span class="line">            <span class="keyword">return</span> n2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> val;</span><br><span class="line">        <span class="keyword">public</span> ListNode next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ListNode</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">            val = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Test&quot;&gt;&lt;a href=&quot;#Test&quot; class=&quot;headerlink&quot; title=&quot;Test&quot;&gt;&lt;/a&gt;Test&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
      <category term="leetcode" scheme="https://jerry80409.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://jerry80409.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leet-code-001-two-sum</title>
    <link href="https://jerry80409.github.io/2018/12/12/leet-code-001-two-sum/"/>
    <id>https://jerry80409.github.io/2018/12/12/leet-code-001-two-sum/</id>
    <published>2018-12-12T04:50:45.000Z</published>
    <updated>2018-12-12T08:31:34.077Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoSumTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> TwoSum twoSum = <span class="keyword">new</span> TwoSum();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>&#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> target = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] act = twoSum.twoSum(nums, target);</span><br><span class="line"></span><br><span class="line">        Assert.assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, act);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">3</span>, <span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> target = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] act = twoSum.twoSum(nums, target);</span><br><span class="line"></span><br><span class="line">        Assert.assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, act);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>&#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> target = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] act = twoSum.twoSum(nums, target);</span><br><span class="line"></span><br><span class="line">        Assert.assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>&#125;, act);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * https://leetcode.com/problems/two-sum/</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Given nums = [2, 7, 11, 15], target = 9,</span></span><br><span class="line"><span class="comment"> * Because nums[0] + nums[1] = 2 + 7 = 9,</span></span><br><span class="line"><span class="comment"> * return [0, 1].</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">final</span> <span class="keyword">int</span>[] nums, <span class="keyword">final</span> <span class="keyword">int</span> target) &#123;</span><br><span class="line">        </span><br><span class="line">        HashMap&lt;Integer, Integer&gt; cache = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (cache.containsKey(nums[i])) &#123;</span><br><span class="line">                <span class="keyword">int</span> index = cache.get(nums[i]);</span><br><span class="line">                result[<span class="number">0</span>] = index;</span><br><span class="line">                result[<span class="number">1</span>] = i;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// put [diff, index]</span></span><br><span class="line">                cache.put(target - nums[i], i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Test&quot;&gt;&lt;a href=&quot;#Test&quot; class=&quot;headerlink&quot; title=&quot;Test&quot;&gt;&lt;/a&gt;Test&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
      <category term="leetcode" scheme="https://jerry80409.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://jerry80409.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>jq 解析 json</title>
    <link href="https://jerry80409.github.io/2018/12/12/jq-cli/"/>
    <id>https://jerry80409.github.io/2018/12/12/jq-cli/</id>
    <published>2018-12-12T03:20:29.000Z</published>
    <updated>2018-12-12T04:46:24.590Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jq"><a href="#jq" class="headerlink" title="jq"></a>jq</h3><p>在 shell 環境下, 用來解析 json 字串的工具, 類似 <code>sed</code>, <code>awk</code>, <code>grep</code> 的字串處理工具。<br><a href="https://stedolan.github.io/jq/" target="_blank" rel="noopener">https://stedolan.github.io/jq/</a></p><h3 id="jq-play"><a href="#jq-play" class="headerlink" title="jq play"></a>jq play</h3><p>測試 jq 語法。<br><a href="https://jqplay.org/" target="_blank" rel="noopener">https://jqplay.org/</a></p><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>格式化 response 方便閱讀。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">'https://api.github.com/repos/stedolan/jq/commits?per_page=5'</span> | jq <span class="string">'.'</span></span><br></pre></td></tr></table></figure></p><p>取得 element 0<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">'https://api.github.com/repos/stedolan/jq/commits?per_page=5'</span> | jq <span class="string">'.[0]'</span></span><br></pre></td></tr></table></figure></p><p>取得 element 0, 並且將 <code>.commit.message</code> 的字串重新組合到 <code>message</code>, <code>.commit.committer.name</code> 重新組合到 <code>name</code><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">'https://api.github.com/repos/stedolan/jq/commits?per_page=5'</span> | jq <span class="string">'.[0] | &#123;message: .commit.message, name: .commit.committer.name&#125;'</span></span><br></pre></td></tr></table></figure></p><p>可以用 <code>[]</code> collection (array) 的形式, 打包 json 的處理結果<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">'https://api.github.com/repos/stedolan/jq/commits?per_page=5'</span> | jq <span class="string">'[.[] | &#123;message: .commit.message, name: .commit.committer.name&#125;]'</span></span><br></pre></td></tr></table></figure></p><h3 id="取得-docker-bridge-的-ipv4"><a href="#取得-docker-bridge-的-ipv4" class="headerlink" title="取得 docker bridge 的 ipv4"></a>取得 docker bridge 的 ipv4</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network inspect bridge</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"Name"</span>: <span class="string">"bridge"</span>,</span><br><span class="line">    <span class="attr">"Id"</span>: <span class="string">"fake-id"</span>,</span><br><span class="line">    <span class="attr">"Created"</span>: <span class="string">"2017-07-05T01:07:55.747497179Z"</span>,</span><br><span class="line">    <span class="attr">"Scope"</span>: <span class="string">"local"</span>,</span><br><span class="line">    <span class="attr">"Driver"</span>: <span class="string">"bridge"</span>,</span><br><span class="line">    <span class="attr">"EnableIPv6"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"IPAM"</span>: &#123;</span><br><span class="line">      <span class="attr">"Driver"</span>: <span class="string">"default"</span>,</span><br><span class="line">      <span class="attr">"Options"</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">"Config"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"Subnet"</span>: <span class="string">"172.17.0.0/16"</span>,</span><br><span class="line">          <span class="attr">"Gateway"</span>: <span class="string">"172.17.0.1"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"Internal"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"Attachable"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"Ingress"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"ConfigFrom"</span>: &#123;</span><br><span class="line">      <span class="attr">"Network"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"ConfigOnly"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"Containers"</span>: &#123;</span><br><span class="line">      <span class="attr">"b59a12af7c87621b43c95a9adbcf047076b8a4b6b6ce0d6c5e6e48e21188ce6a"</span>: &#123;</span><br><span class="line">        <span class="attr">"Name"</span>: <span class="string">"heuristic_rosalind"</span>,</span><br><span class="line">        <span class="attr">"EndpointID"</span>: <span class="string">"fake-endpoint-id"</span>,</span><br><span class="line">        <span class="attr">"MacAddress"</span>: <span class="string">"fake-mac-address"</span>,</span><br><span class="line">        <span class="attr">"IPv4Address"</span>: <span class="string">"172.17.0.2/16"</span>,</span><br><span class="line">        <span class="attr">"IPv6Address"</span>: <span class="string">""</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"Options"</span>: &#123;</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.default_bridge"</span>: <span class="string">"true"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.enable_icc"</span>: <span class="string">"true"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.enable_ip_masquerade"</span>: <span class="string">"true"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.host_binding_ipv4"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.name"</span>: <span class="string">"docker0"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.driver.mtu"</span>: <span class="string">"1500"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"Labels"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>先把 <code>Containers</code> 先存起來<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">containers=$(docker network inspect bridge | jq <span class="string">'.[0].Containers'</span> | jq <span class="string">'keys[]'</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$containers</span>            <span class="comment"># b59a12af7c87621b43c95a9adbcf047076b8a4b6b6ce0d6c5e6e48e21188ce6a</span></span><br></pre></td></tr></table></figure></p><p>再拿來 select 一次<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipv4=$(docker network inspect bridge | jq <span class="string">".[0].Containers.<span class="variable">$&#123;containers&#125;</span>.IPv4Address"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ipv4</span>            <span class="comment"># 172.17.0.2/16</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;jq&quot;&gt;&lt;a href=&quot;#jq&quot; class=&quot;headerlink&quot; title=&quot;jq&quot;&gt;&lt;/a&gt;jq&lt;/h3&gt;&lt;p&gt;在 shell 環境下, 用來解析 json 字串的工具, 類似 &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, &lt;
      
    
    </summary>
    
      <category term="misc" scheme="https://jerry80409.github.io/categories/misc/"/>
    
    
      <category term="jq" scheme="https://jerry80409.github.io/tags/jq/"/>
    
      <category term="json" scheme="https://jerry80409.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 設定</title>
    <link href="https://jerry80409.github.io/2018/12/07/setup-hexo/"/>
    <id>https://jerry80409.github.io/2018/12/07/setup-hexo/</id>
    <published>2018-12-07T05:40:23.000Z</published>
    <updated>2018-12-07T07:23:54.170Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>每個工程師都有一段踏入不歸路的小故事, 我的程式學習之路是從寫 blog 開始, 從改 css 到自己架設 wordpress 學了 php, 用了 <a href="http://octopress.org/" target="_blank" rel="noopener">octopress</a>, <a href="https://hexo.io/" target="_blank" rel="noopener">hexo</a> 學了 git。總而言之如果你不嫌麻煩 <code>HEXO</code> 是個很棒的 blog 寫作套件, 方便讓你把 blog hosting 在 Github 上。</p><h3 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h3><p><a href="https://hexo.io/zh-tw/docs/#%E5%AE%89%E8%A3%9D%E9%9C%80%E6%B1%82" target="_blank" rel="noopener">Hexo docs</a>, 需要 node.js 環境支援。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node --version            <span class="comment"># v11.2.0</span></span><br><span class="line">npm --version             <span class="comment"># 6.4.1</span></span><br><span class="line">npm install hexo-cli -g   <span class="comment"># -g 安裝在 global</span></span><br></pre></td></tr></table></figure></p><p>建立 blog 資料夾, 我自己是習慣在自己的使用者目錄下建立, 打開 <code>http://localhost:4000</code> 就能預覽上線後的樣子<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo g; hexo s</span><br><span class="line"><span class="comment"># INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span></span><br></pre></td></tr></table></figure></p><h3 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h3><p><a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="noopener">Hexo-theme-clean-blog</a>, 會選用這個 theme 是因為寫 google bloger 也是用這個, 字體跟排版對中文支援比較不適合, 但可以自己微調。</p><p>修改 <code>~/blog/theme/clean-blog/source/css/mixins.styl</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sans-serif()</span><br><span class="line">  font-family -apple-system, BlinkMacSystemFont, &apos;Open Sans&apos;, &apos;Helvetica Neue&apos;, Helvetica, Arial, sans-serif</span><br></pre></td></tr></table></figure></p><p>其他細節我忘了 XD。</p><h3 id="Github-plugin"><a href="#Github-plugin" class="headerlink" title="Github plugin"></a>Github plugin</h3><p><a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a> 這個套件用來把 blog hosting 到 Github 上面<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/blog</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>修改 _config.yml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim  ~/blog/_config.yml</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/your-github-account/your-github-account.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  message:</span><br></pre></td></tr></table></figure><p>部署到 Github 上<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><h3 id="Rss-plugin-option"><a href="#Rss-plugin-option" class="headerlink" title="Rss plugin (option)"></a>Rss plugin (option)</h3><p><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a>, 如果希望其他人可以用 Rss 瀏覽你的 blog 的話可以考慮安裝一下這個 plugin。我自己有遇到 <code>PCDATA invalid Char value 8</code> <a href="https://github.com/hexojs/hexo-generator-feed/issues/35" target="_blank" rel="noopener">Issue</a> 還沒處理。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></p><p>修改 _config.yml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/blog/_config.yml</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Feed Atom</span></span><br><span class="line"><span class="comment"># https://github.com/hexojs/hexo-generator-feed</span></span><br><span class="line">feed:</span><br><span class="line">  <span class="built_in">type</span>: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  <span class="built_in">limit</span>: 10</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g            <span class="comment"># 這個指令除了產生文章頁面外, 可以在 http://localhost:4000/atom.xml 看到你的 rss 文章</span></span><br></pre></td></tr></table></figure><h3 id="Disqus-設定"><a href="#Disqus-設定" class="headerlink" title="Disqus 設定"></a>Disqus 設定</h3><p><a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 是留言管理套件, <a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="noopener">Hexo-theme-clean-blog</a>, 有支援 Disqus, 設定起來很方便, 只要申請好把相關資訊設定在 <code>blog/themes/clean-blog/_config.yml</code> 就好了。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/blog/themes/clean-blog/_config.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Comments. Choose one by filling up the information</span></span><br><span class="line">comments:</span><br><span class="line">  <span class="comment"># Disqus comments</span></span><br><span class="line">  disqus_shortname: your-disqus-shortname</span><br></pre></td></tr></table></figure><h3 id="Google-Analytics-設定"><a href="#Google-Analytics-設定" class="headerlink" title="Google Analytics 設定"></a>Google Analytics 設定</h3><p><a href="https://analytics.google.com/analytics/web/" target="_blank" rel="noopener">Google Analytics</a> 網站分析工具, 用來分析流量, 瀏覽者行為的工具, 在寫文章時可以參考一下報表做改進, 一樣 <a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="noopener">Hexo-theme-clean-blog</a>, 有支援 Google Analytics, 設定一下就好。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/blog/themes/clean-blog/_config.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Analytics Tracking ID</span></span><br><span class="line">google_analytics: your-google-analytics-tracking-id</span><br></pre></td></tr></table></figure><h3 id="提交-sitemap"><a href="#提交-sitemap" class="headerlink" title="提交 sitemap"></a>提交 sitemap</h3><p><code>sitemap.xml</code> 是給搜尋引擎爬蟲閱讀的文件, 沒提交也不會怎樣, 只是更新到搜尋引擎上會比較慢一點而已。到 <a href="https://search.google.com/search-console/about" target="_blank" rel="noopener">Google search console</a>, 沒意外的話設定好 web propertity 把網址填上去它就會自動去爬, 不太需要設定什麼。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g            <span class="comment"># 這個指令除了產生文章頁面外, 可以在 http://localhost:4000/sitemap.xml 看到你的 sitemap</span></span><br></pre></td></tr></table></figure><p>Google search console 後台<br><img src="/img/setup-hexo/google-search-console.png" alt="google-search-console"></p><h3 id="看板娘-option"><a href="#看板娘-option" class="headerlink" title="看板娘 (option)"></a>看板娘 (option)</h3><p>不要問, 但很厲害, <a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">Hexo-helper-live2d</a></p><h3 id="Version-Controller"><a href="#Version-Controller" class="headerlink" title="Version Controller"></a>Version Controller</h3><p>除了 hosting 要開一個 Repository, 記得另外開一個 Repository 做版本管理, 把 blog 相關設定跟現有的文章 commit 上去, 方便之後在不同的電腦上編寫。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> your-blog-repo</span><br><span class="line"><span class="built_in">cd</span> your-blog</span><br><span class="line">npm install</span><br><span class="line">hexo new post your-post</span><br></pre></td></tr></table></figure><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo docs</a></li><li><a href="https://coffee0127.github.io/blog/2016/08/09/hexo-configuration/" target="_blank" rel="noopener">Xuan’s Blog - hexo config</a></li><li><a href="https://www.jianshu.com/p/c20bb9df1867" target="_blank" rel="noopener">Hexo SEO - 簡書</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h3&gt;&lt;p&gt;每個工程師都有一段踏入不歸路的小故事, 我的程式學習之路是從寫 blog 開始, 從改 css 到自己架設 wordpres
      
    
    </summary>
    
      <category term="misc" scheme="https://jerry80409.github.io/categories/misc/"/>
    
    
      <category term="hexo" scheme="https://jerry80409.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>mac 開發環境設定</title>
    <link href="https://jerry80409.github.io/2018/12/07/mac-dev-setup/"/>
    <id>https://jerry80409.github.io/2018/12/07/mac-dev-setup/</id>
    <published>2018-12-07T04:34:20.000Z</published>
    <updated>2018-12-07T05:38:27.430Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Install-Homebrew"><a href="#Install-Homebrew" class="headerlink" title="Install Homebrew"></a>Install Homebrew</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="Iterm2"><a href="#Iterm2" class="headerlink" title="Iterm2"></a>Iterm2</h3><p><a href="https://sourabhbajaj.com/mac-setup/iTerm/" target="_blank" rel="noopener">https://sourabhbajaj.com/mac-setup/iTerm/</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install iterm2</span><br></pre></td></tr></table></figure></p><h3 id="Oh-my-zsh-option"><a href="#Oh-my-zsh-option" class="headerlink" title="Oh-my-zsh (option)"></a>Oh-my-zsh (option)</h3><p>其實我不太擅長寫 <code>z_shell</code>, 單純只是覺得好看而已<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"source ~/.bash_profile"</span> &gt;&gt; .zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></p><p>移除 oh-my-zsh<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uninstall_oh_my_zsh</span><br></pre></td></tr></table></figure></p><h3 id="Bash-it-option"><a href="#Bash-it-option" class="headerlink" title="Bash-it (option)"></a>Bash-it (option)</h3><p>如果還是習慣寫 <code>bash_shell</code>, 我會推薦 <a href="https://github.com/Bash-it/bash-it" target="_blank" rel="noopener">bash-it</a> 這個套件。<br>這邊有多種選擇 <a href="https://github.com/k4m4/terminals-are-sexy" target="_blank" rel="noopener">https://github.com/k4m4/terminals-are-sexy</a>, 從 zsh, fish, bash, putty, etc. 應有盡有。</p><h3 id="Fonts"><a href="#Fonts" class="headerlink" title="Fonts"></a>Fonts</h3><p><a href="https://github.com/Homebrew/homebrew-cask-fonts/tree/master/Casks" target="_blank" rel="noopener">https://github.com/Homebrew/homebrew-cask-fonts/tree/master/Casks</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew tap caskroom/fonts</span><br><span class="line">brew search nerd</span><br><span class="line">brew cask install font-sourcecodepro-nerd-font</span><br><span class="line">brew cask install font-sourcecodepro-nerd-font-mono</span><br></pre></td></tr></table></figure></p><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install java8 maven gradle      </span><br><span class="line">brew cask install intellij-idea</span><br></pre></td></tr></table></figure><h3 id="Python3"><a href="#Python3" class="headerlink" title="Python3"></a>Python3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install python</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line">python3 --version            <span class="comment"># Python 3.7.1</span></span><br><span class="line">pip3 --version               <span class="comment"># pip 18.1 from /usr/local/lib/python3.7/site-packages/pip (python 3.7)</span></span><br><span class="line">pip3 install pipenv          <span class="comment"># (option) 自己習慣用 pipenv</span></span><br><span class="line">pip3 install pytest          <span class="comment"># (option) 自己習慣用 pytest</span></span><br></pre></td></tr></table></figure><h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><p>安裝 <code>nvm</code>, 用來切換 node.js 版本<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install nvm</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export NVM_DIR="</span><span class="variable">$HOME</span>/.nvm<span class="string">" &gt;&gt; ~/.zshrc</span></span><br><span class="line"><span class="string">echo "</span>. <span class="string">"/usr/local/opt/nvm/nvm.sh"</span> &gt;&gt; ~/.zshrc</span><br><span class="line">nvm install stable</span><br></pre></td></tr></table></figure></p><h3 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew  install mysql</span><br><span class="line">brew services start mysql            <span class="comment"># start mysql service</span></span><br><span class="line">brew cask install tableplus          <span class="comment"># mysql gui, support mysql_8.0</span></span><br><span class="line">brew cask install sequel-pro         <span class="comment"># mysql gui</span></span><br></pre></td></tr></table></figure><h3 id="Docker-CE"><a href="#Docker-CE" class="headerlink" title="Docker CE"></a>Docker CE</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install docker</span><br><span class="line">docker --version &amp;&amp; docker-compose --version &amp;&amp; docker-machine --version</span><br><span class="line"><span class="comment"># Docker version 18.09.0, build 4d60db4</span></span><br><span class="line"><span class="comment"># docker-compose version 1.23.2, build 1110ad01</span></span><br><span class="line"><span class="comment"># docker-machine version 0.16.0, build 702c267f</span></span><br></pre></td></tr></table></figure><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install sourcetree</span><br></pre></td></tr></table></figure><h3 id="Common"><a href="#Common" class="headerlink" title="Common"></a>Common</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install boom-3d            <span class="comment"># 音效增強</span></span><br><span class="line">brew cask install google-chrome      <span class="comment"># 自己常用的瀏覽器</span></span><br><span class="line">brew cask install telegram           <span class="comment"># 通訊軟體</span></span><br><span class="line">brew cask install evernote           <span class="comment"># 筆記工具</span></span><br><span class="line">brew cask install visual-studio-code <span class="comment"># 什麼都能寫的萬用 IDE</span></span><br><span class="line"></span><br><span class="line">brew install tree                    <span class="comment"># show directory tree</span></span><br><span class="line">brew install jq                      <span class="comment"># 操作 json 工具</span></span><br></pre></td></tr></table></figure><h3 id="REST-client"><a href="#REST-client" class="headerlink" title="REST client"></a>REST client</h3><p><a href="https://www.getpostman.com/" target="_blank" rel="noopener">https://www.getpostman.com/</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install postman</span><br></pre></td></tr></table></figure></p><h3 id="Google-cloud-platform-tools"><a href="#Google-cloud-platform-tools" class="headerlink" title="Google cloud platform tools"></a>Google cloud platform tools</h3><p>安裝 <code>gsutil</code><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://sdk.cloud.google.com | bash</span><br></pre></td></tr></table></figure></p><p>安裝 <code>gcloud</code><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-208.0.1-darwin-x86_64.tar.gz</span><br><span class="line">tar -zxvf google-cloud-sdk-208.0.1-darwin-x86_64.tar.gz .</span><br><span class="line">./google-cloud-sdk/install.sh</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line">gcloud init</span><br></pre></td></tr></table></figure></p><h3 id="Hexo-option"><a href="#Hexo-option" class="headerlink" title="Hexo (option)"></a>Hexo (option)</h3><p>寫 blog 的套件, 需要 node.js 環境<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Install-Homebrew&quot;&gt;&lt;a href=&quot;#Install-Homebrew&quot; class=&quot;headerlink&quot; title=&quot;Install Homebrew&quot;&gt;&lt;/a&gt;Install Homebrew&lt;/h3&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="misc" scheme="https://jerry80409.github.io/categories/misc/"/>
    
    
      <category term="mac_os" scheme="https://jerry80409.github.io/tags/mac-os/"/>
    
  </entry>
  
  <entry>
    <title>Maven 新手教學</title>
    <link href="https://jerry80409.github.io/2018/11/30/maven-for-beginners/"/>
    <id>https://jerry80409.github.io/2018/11/30/maven-for-beginners/</id>
    <published>2018-11-30T05:54:55.000Z</published>
    <updated>2018-12-04T11:18:31.956Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><blockquote><p>People develop abstractions by generalizing from concrete examples. Every attempt to determine the correct abstraction on paper without actually developing a running system is doomed to failure. No one is that smart. A framework is a resuable design, so you develop it by looking at the things it is supposed to be a design of. The more examples you look at, the more general your framework will be. </p></blockquote><p>Maven 擁有跟大多數的專案管理工具一樣, 具有建構專案, 整合測試, 管理套件相依, 檢查套件衝突問題, 友善但複雜的 plugins, 如果你有用過 <code>npm</code>, <code>composer</code> 那些工具的話, 大概就知道它的角色了。因為脫離了 intelliJ 許多東西都要自己來, 手動建立專案就是一個新的開始, 如果可以, 我還是推薦用 <code>intelliJ</code> 真的快很多啊, (tears。</p><p>在寫這篇的時候, 無聊稍微翻了一下 Maven 的起源來自於另一個 <a href="http://jakarta.apache.org/alexandria/legacy/" target="_blank" rel="noopener">Alexandria</a> 專案裡的一部分, 後來才轉入 <a href="http://turbine.apache.org/" target="_blank" rel="noopener">Turbine</a>, HA 離題了。</p><h3 id="Dev-environment"><a href="#Dev-environment" class="headerlink" title="Dev environment"></a>Dev environment</h3><ul><li>Mac</li><li>Java8</li><li>VSCode</li></ul><h3 id="Maven-in-5-mins"><a href="#Maven-in-5-mins" class="headerlink" title="Maven in 5 mins"></a>Maven in 5 mins</h3><p><a href="https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" target="_blank" rel="noopener">Maven in 5 mins</a>, 這是一個簡單瞭解 Maven 功能的教學, 初學者必看。<br>另一篇, 我推薦這個 <a href="http://puremonkey2010.blogspot.com/2017/06/maven-maven-part1.html" target="_blank" rel="noopener">blog</a>, 基本的指令說明的很清楚。<br>建立專案的起手式<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn archetype:generate \</span><br><span class="line">  -DarchetypeGroupId=org.apache.maven.archetypes \  <span class="comment"># 專案的 archetypes, 可以替換自己喜歡的</span></span><br><span class="line">  -DgroupId=com.mycompany.app \                     <span class="comment"># package name</span></span><br><span class="line">  -DartifactId=my-app                               <span class="comment"># app name</span></span><br></pre></td></tr></table></figure></p><p>官方提供了幾種專案架構(J2EE, JSR-268, Webapp, etc.), 我沒有全部都用過, 細節可以 <a href="https://maven.apache.org/guides/introduction/introduction-to-archetypes.html" target="_blank" rel="noopener">參考這裡</a>。</p><h3 id="Archetype-quickstart-jdk8"><a href="#Archetype-quickstart-jdk8" class="headerlink" title="Archetype-quickstart-jdk8"></a>Archetype-quickstart-jdk8</h3><p><a href="https://github.com/ngeor/archetype-quickstart-jdk8" target="_blank" rel="noopener">https://github.com/ngeor/archetype-quickstart-jdk8</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn archetype:generate \</span><br><span class="line">    -DgroupId=com.examples \</span><br><span class="line">    -DartifactId=java-examples \</span><br><span class="line">    -Dpackaging=jar \</span><br><span class="line">    -DarchetypeGroupId=com.github.ngeor \</span><br><span class="line">    -DarchetypeArtifactId=archetype-quickstart-jdk8 \</span><br><span class="line">    -DarchetypeVersion=1.2.0 \</span><br><span class="line">    -DinteractiveMode=<span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>Archetypes, 我會推薦這個, 而且也比較符合團隊開發用, 支援:</p><ul><li>Java version set to 8</li><li>jUnit updated to latest (4.12)</li><li>fixed indentation and formatting (4 spaces)  </li><li>.gitignore file</li><li>checkstyle rules</li><li>travis support</li><li>checkstyle plugin</li><li>jacoco plugin</li><li>javadoc plugin</li><li>coveralls plugin</li></ul><p>架構長這樣<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── pom.xml</span><br><span class="line">└── src</span><br><span class="line">    ├── main</span><br><span class="line">    │   └── java</span><br><span class="line">    │       └── com</span><br><span class="line">    │           └── examples</span><br><span class="line">    │               └── App.java</span><br><span class="line">    └── <span class="built_in">test</span></span><br><span class="line">        └── java</span><br><span class="line">            └── com</span><br><span class="line">                └── examples</span><br><span class="line">                    └── AppTest.java</span><br></pre></td></tr></table></figure></p><h3 id="測試與打包"><a href="#測試與打包" class="headerlink" title="測試與打包"></a>測試與打包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> java-examples</span><br><span class="line">mvn clean package</span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running com.examples.AppTest</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ java-examples ---</span><br><span class="line">[INFO] Building jar: /Users/jerry80409/java/java-examples/target/java-examples-1.0-SNAPSHOT.jar</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 4.049 s</span><br><span class="line">[INFO] Finished at: 2018-11-30T15:23:16+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h3 id="套件管理"><a href="#套件管理" class="headerlink" title="套件管理"></a>套件管理</h3><p><code>.pom</code> 就類似 npm 的 <code>package.json</code> 應該很好懂吧, 套件的依賴就寫在 <code>&lt;dependencies&gt;</code> tag 底下, <strong>archetype-quickstart-jdk8</strong> 自帶 <code>junit4</code>, 很棒吧。<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="Profile-設定"><a href="#Profile-設定" class="headerlink" title="Profile 設定"></a>Profile 設定</h3><p>Profile 標籤允許依據不同的環境來執行不同的建構與 plugins 組合, <strong>archetype-quickstart-jdk8</strong> 裡面就包含了兩種 profiles (<code>jacoco</code>, <code>travis</code>)。<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    This profile enables jacoco when unit tests are run.</span></span><br><span class="line"><span class="comment">    You can run it with mvn -P jacoco test.</span></span><br><span class="line"><span class="comment">    It also activates itself on Travis.</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>jacoco<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    For the Travis profile:</span></span><br><span class="line"><span class="comment">    - we want to break the build on any checkstyle violation.</span></span><br><span class="line"><span class="comment">    - we want to be able to publish coverage report to coveralls.</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>travis<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><a href="https://www.jacoco.org/jacoco/trunk/doc/maven.html" target="_blank" rel="noopener">jacoco</a> 是用來檢查你的測試 (Junit) 覆蓋了多少比例的程式碼, 執行完之後會在 <code>/target/site/jacoco/</code> 出一份 Report。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn <span class="built_in">help</span>:describe -Dplugin=org.jacoco:jacoco-maven-plugin -Ddetail    <span class="comment"># 看文件</span></span><br><span class="line">mvn <span class="built_in">test</span> -Pjacoco</span><br></pre></td></tr></table></figure></p><p><img src="/img/maven-for-beginners/maven-jacoco.png" alt="maven-jacoco"></p><h3 id="Help-describe-plugin"><a href="#Help-describe-plugin" class="headerlink" title="Help:describe plugin"></a>Help:describe plugin</h3><p>任何的 plugin 都可以用 <code>help:describe</code> 來取得說明, 基本用法<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn <span class="built_in">help</span>:describe -Dplugin:[group-id]:[artifact-id] -Dgoal=[some-goal]</span><br></pre></td></tr></table></figure></p><h3 id="Plugin-設定"><a href="#Plugin-設定" class="headerlink" title="Plugin 設定"></a>Plugin 設定</h3><p>Plugin 是 <code>build</code> 標籤底下的子標籤, 功能很強大也很複雜, 可以用來做很多自動化的事情節省不少時間, 在說明之前建議先閱讀</p><ul><li><a href="https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html" target="_blank" rel="noopener">https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html</a></li><li><a href="https://www.baeldung.com/core-maven-plugins" target="_blank" rel="noopener">https://www.baeldung.com/core-maven-plugins</a></li></ul><p>再來是了解 <code>phases</code>, <code>goals</code> 的概念, 是 plugin 的主要核心, 一般來說, 一個 <code>phase</code> 通常會對應多個 <code>goals</code>, 如果沒有對應的 <code>goals</code> 在 build 的時候就不會被執行, 基本的用法就是<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn --<span class="built_in">help</span></span><br><span class="line">usage: mvn [options] [&lt;goal(s)&gt;] [&lt;phase(s)&gt;]</span><br></pre></td></tr></table></figure></p><p>以 <a href="https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html" target="_blank" rel="noopener">Introduction-to-the-lifecycle</a> 裡面的範例來做解釋,<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean dependency:copy-dependencies package</span><br></pre></td></tr></table></figure></p><ul><li><code>clean</code>, <code>package</code> 是 <strong>phases</strong></li><li><code>dependency:copy-dependencies</code> 是 <strong>goal</strong></li><li>這個指令會先執行 <code>clean</code>, 包含 pre-clean, clean 這兩個 phases</li><li>再執行 <code>dependency:copy-dependencies</code>, 這是 <a href="http://maven.apache.org/plugins/maven-dependency-plugin/" target="_blank" rel="noopener">maven-dependency-plugin</a> 的 goals 之一, 用來將依賴套件 (dependencies) 下載到指定位置</li><li>再執行 <code>package</code> 依據 pom.xml 裡面定義的 <code>&lt;packaging&gt;</code> tag 打包成對應的格式, 預設是 <code>jar</code></li></ul><h3 id="Jacoco-plugin"><a href="#Jacoco-plugin" class="headerlink" title="Jacoco plugin"></a>Jacoco plugin</h3><p>是 <strong>archetype-quickstart-jdk8</strong> 模板裡面的其中一個 plugin, 在 travis 的環境底下會自動執行</p><ul><li>在 <code>validate</code> phase 會做 <code>mvn jacoco:prepare-agent</code>, </li><li>在 <code>test</code> phase 會做 <code>mvn jacoco:report</code>, </li><li><p>等同於底下這行指令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn jacoco:prepare-agent <span class="built_in">test</span> jacoco:report</span><br></pre></td></tr></table></figure></li><li><p><code>pom.xml</code> 註解</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>jacoco<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 這是在 travis 上面才會有的環境變數, 會在 travis 環境下自動執行相關的 build --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>env.TRAVIS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jacoco<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jacoco-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 這個 execution 綁定了 validate phase, 會執行 jacoco:prepare-agent --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>prepare-agent<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>validate<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>prepare-agent<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 這個 execution 綁定了 test phase, 會執行 jacoco:report --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 會在 /target/site/jacoco/ 底下產生報告 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>report<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>test<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>report<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Checkstyle-plugin"><a href="#Checkstyle-plugin" class="headerlink" title="Checkstyle plugin"></a>Checkstyle plugin</h3><p>是 <strong>archetype-quickstart-jdk8</strong> 模板裡面的另一個 plugin, 在 travis 的環境底下會自動執行</p><ul><li>使的的是 <code>com/github/ngeor/checkstyle.xml</code> 的 checkstyle</li><li><p>在 <code>test</code> phase 會做 <code>mvn checkstyle:check</code>, 如果你想要看 html 的話, 可以改成<code>mvn checkstyle:checkstyle</code>, 就會產生 <code>/target/site/checkstyle.html</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>checkstyle<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>test<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>checkstyle<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>pom.xml</code> 註解</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>travis<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>env.TRAVIS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-checkstyle-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 這個 execution 綁定了 test phase, 會執行 checkstyle:check --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 會在產生報告 /target/checkstyle-result.xml --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>checkstyle<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>test<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>check<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 會將報告提交到 coveralls --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- https://docs.coveralls.io/java --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eluder.coveralls<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>coveralls-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                &lt;configuration&gt;</span></span><br><span class="line"><span class="comment">                    &lt;repoToken&gt;your-coveralls-project-repository-token&lt;/repoToken&gt;</span></span><br><span class="line"><span class="comment">                &lt;/configuration&gt;</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="http://jakarta.apache.org/alexandria/legacy/" target="_blank" rel="noopener">Alexandria</a></li><li><a href="https://github.com/ngeor/archetype-quickstart-jdk8" target="_blank" rel="noopener">Archetype-quickstart-jdk8</a></li><li><a href="https://www.baeldung.com/core-maven-plugins" target="_blank" rel="noopener">Baeldung - core-maven-plugins</a></li><li><a href="https://maven.apache.org/plugins/maven-help-plugin/examples/describe-configuration.html" target="_blank" rel="noopener">Describe Plugin</a></li><li><a href="https://maven.apache.org/background/history-of-maven.html" target="_blank" rel="noopener">History-of-maven</a></li><li><a href="https://maven.apache.org/guides/introduction/introduction-to-archetypes.html" target="_blank" rel="noopener">Introduction-to-archetypes</a></li><li><a href="https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html" target="_blank" rel="noopener">Introduction-to-the-lifecycle</a></li><li><a href="http://kentyeh.github.io/mavenStartup/index.html" target="_blank" rel="noopener">Kentyeh Maven 教學</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;People develop abstractions by ge
      
    
    </summary>
    
      <category term="java8" scheme="https://jerry80409.github.io/categories/java8/"/>
    
    
      <category term="java" scheme="https://jerry80409.github.io/tags/java/"/>
    
      <category term="maven" scheme="https://jerry80409.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>git-sync-remote-branch</title>
    <link href="https://jerry80409.github.io/2018/11/28/git-sync-remote-branch/"/>
    <id>https://jerry80409.github.io/2018/11/28/git-sync-remote-branch/</id>
    <published>2018-11-28T06:37:25.000Z</published>
    <updated>2018-11-28T07:04:49.210Z</updated>
    
    <content type="html"><![CDATA[<h3 id="同步-local-branch"><a href="#同步-local-branch" class="headerlink" title="同步 local branch"></a>同步 local branch</h3><p>在團隊開發過程中, 多多少少都會有些意外, 還好這個不是災難性的意外, (笑<br>這個問題是發生在 <code>git pull origin master</code>, <code>pull master</code> 其實會做兩件事 <code>git fetch</code> 跟 <code>git merge</code>, 因為本地還存在 a branch 所以會檢查 remote 的 a branch 做 merge, 但 remote 已經 PR 結束了, 被 merge 到 master 裡面, 按照開發流程 merge 完成的 branch 會被刪除, 所以 remote 的 a branch 沒了, 因此噴了一個警告。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">error: cannot lock ref &apos;refs/remotes/origin/feature/lambda/dynamoDb&apos;: &apos;refs/remotes/origin/feature/lambda&apos; exists; cannot create &apos;refs/remotes/origin/feature/lambda/dynamoDb&apos;</span><br></pre></td></tr></table></figure></p><p>SourceTree 給我的提示是這樣, 所以就查了一下 <code>prune</code> 的用途<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">error: some local refs could not be updated; try running</span><br><span class="line"> &apos;git remote prune origin&apos; to remove any old, conflicting branches</span><br></pre></td></tr></table></figure></p><h3 id="Git-remote-prune"><a href="#Git-remote-prune" class="headerlink" title="Git remote prune"></a>Git remote prune</h3><p>先看一下文件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">prune</span><br><span class="line">           Deletes stale references associated with &lt;name&gt;. By default, stale</span><br><span class="line">           remote-tracking branches under &lt;name&gt; are deleted, but depending on</span><br><span class="line">           global configuration and the configuration of the remote we might</span><br><span class="line">           even prune local tags that haven&apos;t been pushed there. Equivalent to</span><br><span class="line">           git fetch --prune &lt;name&gt;, except that no new references will be</span><br><span class="line">           fetched.</span><br><span class="line"></span><br><span class="line">           See the PRUNING section of git-fetch(1) for what it&apos;ll prune</span><br><span class="line">           depending on various configuration.</span><br><span class="line"></span><br><span class="line">           With --dry-run option, report what branches will be pruned, but do</span><br><span class="line">           not actually prune them.</span><br></pre></td></tr></table></figure></p><p>所以我比較建議的做法是, 先跑一次 <code>--dry-run</code> 看看哪些會刪除, 再執行 <code>prune origin</code>, 這樣就能保持 local 跟 remote 的 branch 同步。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote prune --dry-run origin    # 確定一下有沒有可能會刪錯</span><br><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;同步-local-branch&quot;&gt;&lt;a href=&quot;#同步-local-branch&quot; class=&quot;headerlink&quot; title=&quot;同步 local branch&quot;&gt;&lt;/a&gt;同步 local branch&lt;/h3&gt;&lt;p&gt;在團隊開發過程中, 多多少少都會有些
      
    
    </summary>
    
      <category term="git" scheme="https://jerry80409.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://jerry80409.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>修正 git remote 資料夾大小寫問題</title>
    <link href="https://jerry80409.github.io/2018/11/28/git-case-sensitive/"/>
    <id>https://jerry80409.github.io/2018/11/28/git-case-sensitive/</id>
    <published>2018-11-28T06:25:56.000Z</published>
    <updated>2018-11-28T06:35:10.521Z</updated>
    
    <content type="html"><![CDATA[<h3 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h3><p>團隊有統一命名原則, 所以得改一下</p><h3 id="core-ignoreCase"><a href="#core-ignoreCase" class="headerlink" title="core.ignoreCase"></a>core.ignoreCase</h3><blockquote><p>If true, this option enables various workarounds to enable Git to work better on filesystems that are not case sensitive, like FAT. For example, if a directory listing finds “makefile” when Git expects “Makefile”, Git will assume it is really the same file, and continue to remember it as “Makefile”.<br>The default is false, except git-clone[1] or git-init[1] will probe and set core.ignoreCase true if appropriate when the repository is created.</p></blockquote><p><code>core.ignoreCase</code> 預設是 <code>false</code> (大小寫敏感), 所以如果沒有改這個 config, <code>push</code> 上去就會長出兩個名稱一樣, 但大小寫寫法不一樣的資料夾, <code>FolderA</code> 跟 <code>foldera</code>, 但我還是不建議把 <code>core.ignoreCase</code> 改為 <code>true</code>, 怕之後開發一團亂之類的。</p><h3 id="手動解"><a href="#手動解" class="headerlink" title="手動解"></a>手動解</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git mv improper_Case improve_case2</span><br><span class="line">git mv improve_case2 improve_case</span><br><span class="line">git commit -m <span class="string">"modified folder cases"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h3&gt;&lt;p&gt;團隊有統一命名原則, 所以得改一下&lt;/p&gt;
&lt;h3 id=&quot;core-ignoreCase&quot;&gt;&lt;a href=&quot;#c
      
    
    </summary>
    
      <category term="git" scheme="https://jerry80409.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://jerry80409.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Git branch 學習</title>
    <link href="https://jerry80409.github.io/2018/11/28/learning-git-branch/"/>
    <id>https://jerry80409.github.io/2018/11/28/learning-git-branch/</id>
    <published>2018-11-28T06:16:24.000Z</published>
    <updated>2018-11-28T06:20:32.792Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Learngitbranching"><a href="#Learngitbranching" class="headerlink" title="Learngitbranching"></a>Learngitbranching</h3><p>我自己還滿喜歡的一個學習 git branch 的地方<br><a href="https://learngitbranching.js.org/" target="_blank" rel="noopener">https://learngitbranching.js.org/</a></p><p><img src="/img/learning-git-branch/learning-git-branch.png" alt="learngitbranching"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Learngitbranching&quot;&gt;&lt;a href=&quot;#Learngitbranching&quot; class=&quot;headerlink&quot; title=&quot;Learngitbranching&quot;&gt;&lt;/a&gt;Learngitbranching&lt;/h3&gt;&lt;p&gt;我自己還滿喜
      
    
    </summary>
    
      <category term="git" scheme="https://jerry80409.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://jerry80409.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Keep changelog</title>
    <link href="https://jerry80409.github.io/2018/11/28/keep-changelog/"/>
    <id>https://jerry80409.github.io/2018/11/28/keep-changelog/</id>
    <published>2018-11-28T06:05:16.000Z</published>
    <updated>2018-11-28T06:15:56.059Z</updated>
    
    <content type="html"><![CDATA[<h3 id="維護-Changelog"><a href="#維護-Changelog" class="headerlink" title="維護 Changelog"></a>維護 Changelog</h3><p>每個團隊的維護策略不一樣, 這篇只是我找來參考用的<br><a href="https://keepachangelog.com/zh-TW/0.3.0/" target="_blank" rel="noopener">https://keepachangelog.com/zh-TW/0.3.0/</a> </p><h3 id="版本號定義"><a href="#版本號定義" class="headerlink" title="版本號定義"></a>版本號定義</h3><ul><li>主版號：當你做了不相容的 API 修改，</li><li>次版號：當你做了向下相容的功能性新增，</li><li>修訂號：當你做了向下相容的問題修正。</li><li>標準的版號「必須 MUST」採用 X.Y.Z 的格式，其中 X、Y 和 Z 為非負的整數，且「禁止 MUST NOT」在數字前方補零。X 是主版號、Y 是次版號、而 Z 為修訂號。每個元素「必須 MUST」以數值來遞增。例如：1.9.1 -&gt; 1.10.0 -&gt; 1.11.0。</li><li>標記版號的軟體發行後，「禁止 MUST NOT」改變該版本軟體的內容。任何修改都「必須 MUST」以新版本發行。</li><li>版本編譯資訊「可以 MAY」被標注在修訂版或先行版號之後，先加上一個加號再加上一連串以句點分隔的標識符號來修飾。標識符號「必須 MUST」由 ASCII 的英數字和連接號 [0-9A-Za-z-]組成，且「禁止 MUST NOT」留白。當判斷版本的優先層級時，版本編譯資訊「可 SHOULD」被忽略。因此當兩個版本只有在版本編譯資訊有差別時，屬於相同的優先層級。範例：1.0.0-alpha+001、1.0.0+20130313144700、1.0.0-beta+exp.sha.5114f85。</li></ul><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><ul><li>版版修訂號, 可以用 <code>master</code> 的 head 去做編號</li><li>每個正式 release 的版本號, 都應該下 <code>git tag</code></li><li>考慮把最新版的 changelog 寫在 <code>README.md</code>, 起碼可以知道最近產品的更新狀態</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;維護-Changelog&quot;&gt;&lt;a href=&quot;#維護-Changelog&quot; class=&quot;headerlink&quot; title=&quot;維護 Changelog&quot;&gt;&lt;/a&gt;維護 Changelog&lt;/h3&gt;&lt;p&gt;每個團隊的維護策略不一樣, 這篇只是我找來參考用的&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="misc" scheme="https://jerry80409.github.io/categories/misc/"/>
    
    
  </entry>
  
</feed>
