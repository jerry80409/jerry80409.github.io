<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PAWS</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jerry80409.github.io/"/>
  <updated>2018-12-26T03:58:16.785Z</updated>
  <id>https://jerry80409.github.io/</id>
  
  <author>
    <name>jerry80409</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>codesignal-almost-increasing-sequence</title>
    <link href="https://jerry80409.github.io/2018/12/26/codesignal-almost-increasing-sequence/"/>
    <id>https://jerry80409.github.io/2018/12/26/codesignal-almost-increasing-sequence/</id>
    <published>2018-12-26T03:41:07.000Z</published>
    <updated>2018-12-26T03:58:16.785Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Pazzle"><a href="#Pazzle" class="headerlink" title="Pazzle"></a>Pazzle</h3><p>Given a sequence of integers as an array, determine whether it is possible to obtain a strictly increasing sequence by removing no more than one element from the array.</p><p>Example:<br>For sequence = [1, 3, 2, 1], the output should be<br>almostIncreasingSequence(sequence) = false.</p><p>For sequence = [1, 3, 2], the output should be<br>almostIncreasingSequence(sequence) = true</p><p>Ref - <a href="https://app.codesignal.com/arcade/intro/level-2/2mxbGwLzvkTCKAJMG" target="_blank" rel="noopener">https://app.codesignal.com/arcade/intro/level-2/2mxbGwLzvkTCKAJMG</a></p><h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test_case_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> act = almostIncreasingSequence(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;);</span><br><span class="line">    assertFalse(act);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test_case_2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> act = almostIncreasingSequence(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>&#125;);</span><br><span class="line">    assertTrue(act);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test_case_3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> act = almostIncreasingSequence(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">10</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;);</span><br><span class="line">    assertTrue(act);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test_case_4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> act = almostIncreasingSequence(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>&#125;);</span><br><span class="line">    assertFalse(act);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test_case_5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> act = almostIncreasingSequence(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">3</span>&#125;);</span><br><span class="line">    assertTrue(act);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>一開始的想法直覺是想到排序後做比較, diff &gt; 2 以上 return false, 但不太對,<br>像 <code>[10, 1, 2, 3, 4, 5]</code> 排序後, diff 絕對大於 2, 且也是屬於 almost incrasing seq,<br>最後回歸基本迴圈 foreach 比較<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">almostIncreasingSequence</span><span class="params">(<span class="keyword">int</span>[] seq)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> countNoSeq = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// compare with next element </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; seq.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (seq[i] &gt;= seq[i + <span class="number">1</span>]) &#123;</span><br><span class="line">            countNoSeq++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// compare with after next element, because removed an element</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; seq.length - <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (seq[i] &gt;= seq[i + <span class="number">2</span>]) &#123;</span><br><span class="line">            countNoSeq++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (countNoSeq &gt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Pazzle&quot;&gt;&lt;a href=&quot;#Pazzle&quot; class=&quot;headerlink&quot; title=&quot;Pazzle&quot;&gt;&lt;/a&gt;Pazzle&lt;/h3&gt;&lt;p&gt;Given a sequence of integers as an array, determine wh
      
    
    </summary>
    
      <category term="codesignal" scheme="https://jerry80409.github.io/categories/codesignal/"/>
    
    
      <category term="codesignal" scheme="https://jerry80409.github.io/tags/codesignal/"/>
    
  </entry>
  
  <entry>
    <title>Java split empty strings</title>
    <link href="https://jerry80409.github.io/2018/12/24/java-split-empty-strings/"/>
    <id>https://jerry80409.github.io/2018/12/24/java-split-empty-strings/</id>
    <published>2018-12-24T11:05:23.000Z</published>
    <updated>2018-12-24T11:31:49.402Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h3><p>在 code review 的時候發現一個有趣的狀況, 預期 <code>.split(&quot;,&quot;)</code> 處理完結果應該是 5, 然而實際上卻是 3<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">"a,b,c,,"</span>;</span><br><span class="line">String[] ary = str.split(<span class="string">","</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// result 3</span></span><br><span class="line">System.out.println(ary.length);</span><br></pre></td></tr></table></figure></p><h3 id="改用-split-regex-limit"><a href="#改用-split-regex-limit" class="headerlink" title="改用 split(regex, limit)"></a>改用 split(regex, limit)</h3><ul><li>如果 limit &gt; 0, 最終處理的 array 長度不會大於 limit, regex express 匹配的次數最多為 n - 1 次,</li><li>如果 limit &lt; 0, regex express 會盡可能的處理匹配, 包含對 空字串 匹配的問題,</li><li>如果 limit = 0, regex express 會儘可能地處理匹配, 但會放棄處理 空字串 匹配的問題。</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_split_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String example = <span class="string">"boo:and:foo"</span>;</span><br><span class="line">    String[] act = example.split(<span class="string">":"</span>, <span class="number">2</span>);</span><br><span class="line">    assertEquals(<span class="string">"boo"</span>, act[<span class="number">0</span>]);</span><br><span class="line">    assertEquals(<span class="string">"and:foo"</span>, act[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_split_2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String example = <span class="string">"boo:and:foo"</span>;</span><br><span class="line">    String[] act = example.split(<span class="string">":"</span>, <span class="number">5</span>);</span><br><span class="line">    assertEquals(<span class="string">"boo"</span>, act[<span class="number">0</span>]);</span><br><span class="line">    assertEquals(<span class="string">"and"</span>, act[<span class="number">1</span>]);</span><br><span class="line">    assertEquals(<span class="string">"foo"</span>, act[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_split_3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String example = <span class="string">"boo:and:foo"</span>;</span><br><span class="line">    String[] act = example.split(<span class="string">":"</span>, -<span class="number">2</span>);</span><br><span class="line">    assertEquals(<span class="string">"boo"</span>, act[<span class="number">0</span>]);</span><br><span class="line">    assertEquals(<span class="string">"and"</span>, act[<span class="number">1</span>]);</span><br><span class="line">    assertEquals(<span class="string">"foo"</span>, act[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_split_4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String example = <span class="string">"boo:and:foo"</span>;</span><br><span class="line">    String[] act = example.split(<span class="string">":"</span>, -<span class="number">1</span>);</span><br><span class="line">    assertEquals(<span class="string">"boo"</span>, act[<span class="number">0</span>]);</span><br><span class="line">    assertEquals(<span class="string">"and"</span>, act[<span class="number">1</span>]);</span><br><span class="line">    assertEquals(<span class="string">"foo"</span>, act[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 等同於 .split(regex)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_split_5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String example = <span class="string">"boo:and:foo"</span>;</span><br><span class="line">    String[] act = example.split(<span class="string">"o"</span>, <span class="number">0</span>);</span><br><span class="line">    assertEquals(<span class="string">"b"</span>, act[<span class="number">0</span>]);</span><br><span class="line">    assertEquals(<span class="string">""</span>, act[<span class="number">1</span>]);</span><br><span class="line">    assertEquals(<span class="string">":and:f"</span>, act[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>在使用 <code>.split(regex)</code> 盡量改為 <code>.split(regex, limit)</code> 去避免空字串切分的問題。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">"a,b,c,,"</span>;</span><br><span class="line">String[] ary = str.split(<span class="string">","</span>, -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// result 5</span></span><br><span class="line">System.out.println(ary.length);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Sample&quot;&gt;&lt;a href=&quot;#Sample&quot; class=&quot;headerlink&quot; title=&quot;Sample&quot;&gt;&lt;/a&gt;Sample&lt;/h3&gt;&lt;p&gt;在 code review 的時候發現一個有趣的狀況, 預期 &lt;code&gt;.split(&amp;quot;,&amp;qu
      
    
    </summary>
    
      <category term="java" scheme="https://jerry80409.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://jerry80409.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Spring-data JPA 搭配 Optional 的使用</title>
    <link href="https://jerry80409.github.io/2018/12/24/spring-data-jpa-and-optional/"/>
    <id>https://jerry80409.github.io/2018/12/24/spring-data-jpa-and-optional/</id>
    <published>2018-12-24T09:25:36.000Z</published>
    <updated>2018-12-24T11:06:52.045Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Optional-Class"><a href="#Optional-Class" class="headerlink" title="Optional Class"></a>Optional Class</h3><p>這是 java8 才有的 class, 一樣是用容器的概念 (container) 來封裝一個 <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/doc-files/ValueBased.html" target="_blank" rel="noopener">value-base</a> 的 class, 無法直接讓你取得 value 的狀態, 而是需要透過 <code>.get()</code> 的方式取得, 或是透過 <code>.isPresent()</code> 來檢查是否 non-null。在 JPA select 資料的時候超好用的。我自己覺得寫得很棒的一篇 <a href="http://blog.tonycube.com/2015/10/java-java8-4-optional.html" target="_blank" rel="noopener">Tony blog</a>。</p><h3 id="Value-base-Class"><a href="#Value-base-Class" class="headerlink" title="Value-base Class"></a>Value-base Class</h3><p><code>java.util.Optional</code> 與 <code>java.time.LocalDateTime</code> 皆屬於 values-base class, 下面的特點用 <code>java.time.LocalDateTime</code> 就很好理解。</p><ul><li>具有 final 或 immutable 的特質。</li><li>已有 <code>equals()</code>, <code>hashCode()</code>, <code>toString()</code> 的方法, 這些狀態來自於 class instance 本身, 而不是從其他 variable 計算得來</li><li>make no use of identity-sensitive operations such as reference equality (==) between instances, identity hash code of instances, or synchronization on an instances’s intrinsic lock; (這句後面 identity hash code 跟 synchronization 的情境不是很理解)</li><li>應該使用 <code>equals()</code>, 而不是 <code>==</code>,</li><li>沒有 constructors 方法可以被建構, 而是透過 Factory 方法實例化, </li><li>當 <code>equals()</code> 發生時, 兩個 instance 是可以互換的, 且不影響後續的運算。</li></ul><p>簡單來說像這樣<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_equals</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LocalDateTime date = LocalDateTime.parse(<span class="string">"2017-02-03T12:30:30"</span>);</span><br><span class="line">    LocalDateTime date1 = LocalDateTime.parse(<span class="string">"2017-02-03T12:30:30"</span>);</span><br><span class="line">    assertTrue(date1.equals(date));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_hashcode_equals</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LocalDateTime date = LocalDateTime.parse(<span class="string">"2017-02-03T12:30:30"</span>);</span><br><span class="line">    LocalDateTime date1 = LocalDateTime.parse(<span class="string">"2017-02-03T12:30:30"</span>);</span><br><span class="line">    assertEquals(date.hashCode(), date1.hashCode());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_to_string</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LocalDateTime date = LocalDateTime.parse(<span class="string">"2017-02-03T12:30:30"</span>);</span><br><span class="line">    assertEquals(<span class="string">"2017-02-03T12:30:30"</span>, date.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Jpa-and-Optional"><a href="#Jpa-and-Optional" class="headerlink" title="Jpa and Optional"></a>Jpa and Optional</h3><p>一般來說用 Jpa 做 CRUD 都會透過 JpaRepository<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserInfoRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">UserInfo</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">UserInfo <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>這樣寫其實也沒什麼不合理, 只是在商業邏輯處理時, 要多一個 if 判斷, 判斷是否有查詢到 userInfo 的資料.<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">business</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    UserInfo user = userInfoRepository.findByName(<span class="string">"dumdum"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Objects.isNull(user)) &#123;</span><br><span class="line">        <span class="comment">// throw exception</span></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>改為用 Optional 試試看<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserInfoRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">UserInfo</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Optional&lt;Userinfo&gt; <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">business</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Optional&lt;Userinfo&gt; userOpt = userInfoRepository.findByName(<span class="string">"dumdum"</span>);</span><br><span class="line">    UserInfo user = userOpt.orElseThrow(() -&gt;</span><br><span class="line">            <span class="keyword">new</span> Exception(<span class="string">"查無 userInfo(dumdum) 資訊."</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找不到 user 還可以替換為預設 user, 這樣就不用處理 Exception, 當然並不是所有的情境都可以預設一個 instance.<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">business</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Optional&lt;Userinfo&gt; userOpt = userInfoRepository.findByName(<span class="string">"dumdum"</span>);</span><br><span class="line">    UserInfo user = userOpt.orElse(<span class="keyword">new</span> UserInfo(<span class="string">"Rocko"</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Optional-Class&quot;&gt;&lt;a href=&quot;#Optional-Class&quot; class=&quot;headerlink&quot; title=&quot;Optional Class&quot;&gt;&lt;/a&gt;Optional Class&lt;/h3&gt;&lt;p&gt;這是 java8 才有的 class, 一樣
      
    
    </summary>
    
      <category term="java" scheme="https://jerry80409.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://jerry80409.github.io/tags/java/"/>
    
      <category term="spring-data" scheme="https://jerry80409.github.io/tags/spring-data/"/>
    
  </entry>
  
  <entry>
    <title>parse-a-uri-query-string-to-key-value</title>
    <link href="https://jerry80409.github.io/2018/12/13/parse-a-uri-query-string-to-key-value/"/>
    <id>https://jerry80409.github.io/2018/12/13/parse-a-uri-query-string-to-key-value/</id>
    <published>2018-12-13T09:41:11.000Z</published>
    <updated>2018-12-19T07:58:12.733Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h3><p>解析 url 的 query string, 解析為 Map 的資料型態, 使用 apache httpcomponents。</p><ul><li>做 urlDecode 處理</li><li>沒有任何 query String 回傳 Empty Map</li><li>確保只處理 key-value 結構的 query String</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_parse_query_map_is_work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String uri = <span class="string">"http://www.domain.com?key1=value1&amp;key2=value2"</span>;</span><br><span class="line">    Map&lt;String, String&gt; act = UriUtil.parseQueryMap(uri);</span><br><span class="line">    assertEquals(<span class="string">"value1"</span>, act.get(<span class="string">"key1"</span>));</span><br><span class="line">    assertEquals(<span class="string">"value2"</span>, act.get(<span class="string">"key2"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assert_parse_not_complete_query_is_work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String uri = <span class="string">"http://www.domain.com?wtf"</span>;</span><br><span class="line">    Map&lt;String, String&gt; act = UriUtil.parseQueryMap(uri);</span><br><span class="line">        </span><br><span class="line">    <span class="comment">// assert empty map</span></span><br><span class="line">    assertEquals(<span class="number">0</span>, act.size());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Dependency"><a href="#Dependency" class="headerlink" title="Dependency"></a>Dependency</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.utils.URIBuilder;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URISyntaxException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UriUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(UriUtil.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">UriUtil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title">parseQueryMap</span><span class="params">(<span class="keyword">final</span> String uriStr)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; queryPairs = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> URI uri = <span class="keyword">new</span> URIBuilder(uriStr).build();</span><br><span class="line">            <span class="keyword">final</span> String rawQuery = uri.getRawQuery();</span><br><span class="line">            log.info(<span class="string">"CurrentUrl Query: &#123;&#125;"</span>, rawQuery);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 過濾沒有 query string</span></span><br><span class="line">            <span class="comment">// 還有過濾無法成對 keyValue 的 query, e.g. http://host/path?123</span></span><br><span class="line">            <span class="keyword">if</span> (Objects.isNull(rawQuery) || !rawQuery.contains(<span class="string">"="</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> queryPairs;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> String[] pairs = rawQuery.split(<span class="string">"&amp;"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> String utf8 = <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (String pair : pairs) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 統一 decode</span></span><br><span class="line">                <span class="keyword">final</span> String deCodePair = URLDecoder.decode(pair, utf8);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// check deCodePair 空字串,</span></span><br><span class="line">                <span class="keyword">if</span> (!deCodePair.isEmpty()) &#123;</span><br><span class="line">                    <span class="keyword">final</span> String[] keyValue = pair.split(<span class="string">"="</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// check is key value</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">2</span> == keyValue.length) &#123;</span><br><span class="line">                        <span class="keyword">final</span> String key = keyValue[<span class="number">0</span>];</span><br><span class="line">                        <span class="keyword">final</span> String value = keyValue[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                        queryPairs.put(key, value);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log.info(<span class="string">"Parser url: &#123;&#125; \n parameters: &#123;&#125;"</span>, uri.toString(), queryPairs);</span><br><span class="line">            <span class="keyword">return</span> queryPairs;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (URISyntaxException uriBuilderUrlException) &#123;</span><br><span class="line">            uriBuilderUrlException.printStackTrace();</span><br><span class="line">            log.warn(<span class="string">"UriBuilder url (&#123;&#125;) has exception: &#123;&#125;"</span>, uriStr, uriBuilderUrlException.getMessage());</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException urlDecodeException) &#123;</span><br><span class="line">            urlDecodeException.printStackTrace();</span><br><span class="line">            log.warn(<span class="string">"Decode url (&#123;&#125;) query has exception: &#123;&#125;"</span>, uriStr, urlDecodeException.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queryPairs;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Purpose&quot;&gt;&lt;a href=&quot;#Purpose&quot; class=&quot;headerlink&quot; title=&quot;Purpose&quot;&gt;&lt;/a&gt;Purpose&lt;/h3&gt;&lt;p&gt;解析 url 的 query string, 解析為 Map 的資料型態, 使用 apache ht
      
    
    </summary>
    
      <category term="java" scheme="https://jerry80409.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://jerry80409.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java8-convert-list-to-map</title>
    <link href="https://jerry80409.github.io/2018/12/13/java8-convert-list-to-map/"/>
    <id>https://jerry80409.github.io/2018/12/13/java8-convert-list-to-map/</id>
    <published>2018-12-13T07:15:41.000Z</published>
    <updated>2018-12-13T09:36:27.002Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Json-data"><a href="#Json-data" class="headerlink" title="Json data"></a>Json data</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;<span class="attr">"uid"</span>:<span class="string">"1"</span>,<span class="attr">"name"</span>:<span class="string">"阿花"</span>,<span class="attr">"age"</span>:<span class="number">38</span>,<span class="attr">"gender"</span>:<span class="string">"F"</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">"uid"</span>:<span class="string">"2"</span>,<span class="attr">"name"</span>:<span class="string">"阿瓜"</span>,<span class="attr">"age"</span>:<span class="number">28</span>,<span class="attr">"gender"</span>:<span class="string">"M"</span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="Entity"><a href="#Entity" class="headerlink" title="Entity"></a>Entity</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_NULL)</span><br><span class="line"><span class="meta">@JsonPropertyOrder</span>(value = &#123;</span><br><span class="line">    <span class="string">"uid"</span>,</span><br><span class="line">    <span class="string">"name"</span>,</span><br><span class="line">    <span class="string">"age"</span>,</span><br><span class="line">    <span class="string">"gender"</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">    <span class="comment">// creativeId equals adId</span></span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"uid"</span>)</span><br><span class="line">    <span class="keyword">private</span> String uid;</span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"name"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"age"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"gender"</span>)</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    List&lt;Customer&gt; customerList =</span><br><span class="line">        objectMapper.readValue(json, <span class="keyword">new</span> TypeReference&gt;() &#123;&#125;);</span><br><span class="line"></span><br><span class="line">    Map customerMap = customerList.stream()</span><br><span class="line">        .collect(Collectors.toMap(</span><br><span class="line">            Customer::getUid,       <span class="comment">// key</span></span><br><span class="line">            customer -&gt; customer)); <span class="comment">// value</span></span><br><span class="line"></span><br><span class="line">    System.out.println(objectMapper.writeValueAsString(customerMap));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"1"</span>: &#123;</span><br><span class="line">    <span class="attr">"uid"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"阿花"</span>,</span><br><span class="line">    <span class="attr">"age"</span>: <span class="number">38</span>,</span><br><span class="line">    <span class="attr">"gender"</span>: <span class="string">"F"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"2"</span>: &#123;</span><br><span class="line">    <span class="attr">"uid"</span>: <span class="string">"2"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"阿瓜"</span>,</span><br><span class="line">    <span class="attr">"age"</span>: <span class="number">28</span>,</span><br><span class="line">    <span class="attr">"gender"</span>: <span class="string">"M"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Json-data&quot;&gt;&lt;a href=&quot;#Json-data&quot; class=&quot;headerlink&quot; title=&quot;Json data&quot;&gt;&lt;/a&gt;Json data&lt;/h3&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="java" scheme="https://jerry80409.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://jerry80409.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>leet-code-021-merge-two-sorted-lists</title>
    <link href="https://jerry80409.github.io/2018/12/12/leet-code-021-merge-two-sorted-lists/"/>
    <id>https://jerry80409.github.io/2018/12/12/leet-code-021-merge-two-sorted-lists/</id>
    <published>2018-12-12T04:51:36.000Z</published>
    <updated>2018-12-12T08:59:08.851Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergeTwoSortedListsTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> MergeTwoSortedLists mergeTwoSortedLists = <span class="keyword">new</span> MergeTwoSortedLists();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * input: null [0]</span></span><br><span class="line"><span class="comment">     * expect: [0] </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n2);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(<span class="number">0</span>, act.val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * input: [2] [1]</span></span><br><span class="line"><span class="comment">     * expect: [1, 2] </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n2);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>, act.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">2</span>, act.next.val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * input: [1] [2]</span></span><br><span class="line"><span class="comment">     * expect: [1, 2] </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n2);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>, act.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">2</span>, act.next.val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * input: [5] [1, 2, 4]</span></span><br><span class="line"><span class="comment">     * expect: [1, 2, 4, 5] </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">new</span> ListNode(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n3 = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n4 = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        n2.next = n3;</span><br><span class="line">        n3.next = n4;</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n2);</span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>, act.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">2</span>, act.next.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">4</span>, act.next.next.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">5</span>, act.next.next.next.val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * input: [-9, 3] [5, 7]</span></span><br><span class="line"><span class="comment">     * expect: [-9, 3, 5, 7] </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ListNode n1 = <span class="keyword">new</span> ListNode(-<span class="number">9</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n2 = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        n1.next = n2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> ListNode n3 = <span class="keyword">new</span> ListNode(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">final</span> ListNode n4 = <span class="keyword">new</span> ListNode(<span class="number">7</span>);</span><br><span class="line">        n3.next = n4;</span><br><span class="line"></span><br><span class="line">        ListNode act = mergeTwoSortedLists.mergeTwoLists(n1, n3);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(-<span class="number">9</span>, act.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">3</span>, act.next.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">5</span>, act.next.next.val);</span><br><span class="line">        Assert.assertEquals(<span class="number">7</span>, act.next.next.next.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * https://leetcode.com/problems/merge-two-sorted-lists/</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Example:</span></span><br><span class="line"><span class="comment"> * Input: 1-&gt;2-&gt;4, 1-&gt;3-&gt;4</span></span><br><span class="line"><span class="comment"> * Output: 1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergeTwoSortedLists</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode n1, ListNode n2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Objects.isNull(n1)) <span class="keyword">return</span> n2;</span><br><span class="line">        <span class="keyword">if</span> (Objects.isNull(n2)) <span class="keyword">return</span> n1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n1.val &lt; n2.val) &#123;</span><br><span class="line">            n1.next = mergeTwoLists(n2, n1.next);</span><br><span class="line">            <span class="keyword">return</span> n1;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            n2.next = mergeTwoLists(n1, n2.next);</span><br><span class="line">            <span class="keyword">return</span> n2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> val;</span><br><span class="line">        <span class="keyword">public</span> ListNode next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ListNode</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">            val = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Test&quot;&gt;&lt;a href=&quot;#Test&quot; class=&quot;headerlink&quot; title=&quot;Test&quot;&gt;&lt;/a&gt;Test&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
      <category term="leetcode" scheme="https://jerry80409.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://jerry80409.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leet-code-001-two-sum</title>
    <link href="https://jerry80409.github.io/2018/12/12/leet-code-001-two-sum/"/>
    <id>https://jerry80409.github.io/2018/12/12/leet-code-001-two-sum/</id>
    <published>2018-12-12T04:50:45.000Z</published>
    <updated>2018-12-12T08:31:34.077Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoSumTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> TwoSum twoSum = <span class="keyword">new</span> TwoSum();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>&#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> target = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] act = twoSum.twoSum(nums, target);</span><br><span class="line"></span><br><span class="line">        Assert.assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, act);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">3</span>, <span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> target = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] act = twoSum.twoSum(nums, target);</span><br><span class="line"></span><br><span class="line">        Assert.assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, act);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>&#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> target = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] act = twoSum.twoSum(nums, target);</span><br><span class="line"></span><br><span class="line">        Assert.assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>&#125;, act);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * https://leetcode.com/problems/two-sum/</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Given nums = [2, 7, 11, 15], target = 9,</span></span><br><span class="line"><span class="comment"> * Because nums[0] + nums[1] = 2 + 7 = 9,</span></span><br><span class="line"><span class="comment"> * return [0, 1].</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">final</span> <span class="keyword">int</span>[] nums, <span class="keyword">final</span> <span class="keyword">int</span> target) &#123;</span><br><span class="line">        </span><br><span class="line">        HashMap&lt;Integer, Integer&gt; cache = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (cache.containsKey(nums[i])) &#123;</span><br><span class="line">                <span class="keyword">int</span> index = cache.get(nums[i]);</span><br><span class="line">                result[<span class="number">0</span>] = index;</span><br><span class="line">                result[<span class="number">1</span>] = i;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// put [diff, index]</span></span><br><span class="line">                cache.put(target - nums[i], i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Test&quot;&gt;&lt;a href=&quot;#Test&quot; class=&quot;headerlink&quot; title=&quot;Test&quot;&gt;&lt;/a&gt;Test&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
      <category term="leetcode" scheme="https://jerry80409.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://jerry80409.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>jq 解析 json</title>
    <link href="https://jerry80409.github.io/2018/12/12/jq-cli/"/>
    <id>https://jerry80409.github.io/2018/12/12/jq-cli/</id>
    <published>2018-12-12T03:20:29.000Z</published>
    <updated>2018-12-12T04:46:24.590Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jq"><a href="#jq" class="headerlink" title="jq"></a>jq</h3><p>在 shell 環境下, 用來解析 json 字串的工具, 類似 <code>sed</code>, <code>awk</code>, <code>grep</code> 的字串處理工具。<br><a href="https://stedolan.github.io/jq/" target="_blank" rel="noopener">https://stedolan.github.io/jq/</a></p><h3 id="jq-play"><a href="#jq-play" class="headerlink" title="jq play"></a>jq play</h3><p>測試 jq 語法。<br><a href="https://jqplay.org/" target="_blank" rel="noopener">https://jqplay.org/</a></p><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>格式化 response 方便閱讀。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">'https://api.github.com/repos/stedolan/jq/commits?per_page=5'</span> | jq <span class="string">'.'</span></span><br></pre></td></tr></table></figure></p><p>取得 element 0<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">'https://api.github.com/repos/stedolan/jq/commits?per_page=5'</span> | jq <span class="string">'.[0]'</span></span><br></pre></td></tr></table></figure></p><p>取得 element 0, 並且將 <code>.commit.message</code> 的字串重新組合到 <code>message</code>, <code>.commit.committer.name</code> 重新組合到 <code>name</code><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">'https://api.github.com/repos/stedolan/jq/commits?per_page=5'</span> | jq <span class="string">'.[0] | &#123;message: .commit.message, name: .commit.committer.name&#125;'</span></span><br></pre></td></tr></table></figure></p><p>可以用 <code>[]</code> collection (array) 的形式, 打包 json 的處理結果<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">'https://api.github.com/repos/stedolan/jq/commits?per_page=5'</span> | jq <span class="string">'[.[] | &#123;message: .commit.message, name: .commit.committer.name&#125;]'</span></span><br></pre></td></tr></table></figure></p><h3 id="取得-docker-bridge-的-ipv4"><a href="#取得-docker-bridge-的-ipv4" class="headerlink" title="取得 docker bridge 的 ipv4"></a>取得 docker bridge 的 ipv4</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network inspect bridge</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"Name"</span>: <span class="string">"bridge"</span>,</span><br><span class="line">    <span class="attr">"Id"</span>: <span class="string">"fake-id"</span>,</span><br><span class="line">    <span class="attr">"Created"</span>: <span class="string">"2017-07-05T01:07:55.747497179Z"</span>,</span><br><span class="line">    <span class="attr">"Scope"</span>: <span class="string">"local"</span>,</span><br><span class="line">    <span class="attr">"Driver"</span>: <span class="string">"bridge"</span>,</span><br><span class="line">    <span class="attr">"EnableIPv6"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"IPAM"</span>: &#123;</span><br><span class="line">      <span class="attr">"Driver"</span>: <span class="string">"default"</span>,</span><br><span class="line">      <span class="attr">"Options"</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">"Config"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"Subnet"</span>: <span class="string">"172.17.0.0/16"</span>,</span><br><span class="line">          <span class="attr">"Gateway"</span>: <span class="string">"172.17.0.1"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"Internal"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"Attachable"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"Ingress"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"ConfigFrom"</span>: &#123;</span><br><span class="line">      <span class="attr">"Network"</span>: <span class="string">""</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"ConfigOnly"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"Containers"</span>: &#123;</span><br><span class="line">      <span class="attr">"b59a12af7c87621b43c95a9adbcf047076b8a4b6b6ce0d6c5e6e48e21188ce6a"</span>: &#123;</span><br><span class="line">        <span class="attr">"Name"</span>: <span class="string">"heuristic_rosalind"</span>,</span><br><span class="line">        <span class="attr">"EndpointID"</span>: <span class="string">"fake-endpoint-id"</span>,</span><br><span class="line">        <span class="attr">"MacAddress"</span>: <span class="string">"fake-mac-address"</span>,</span><br><span class="line">        <span class="attr">"IPv4Address"</span>: <span class="string">"172.17.0.2/16"</span>,</span><br><span class="line">        <span class="attr">"IPv6Address"</span>: <span class="string">""</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"Options"</span>: &#123;</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.default_bridge"</span>: <span class="string">"true"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.enable_icc"</span>: <span class="string">"true"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.enable_ip_masquerade"</span>: <span class="string">"true"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.host_binding_ipv4"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.bridge.name"</span>: <span class="string">"docker0"</span>,</span><br><span class="line">      <span class="attr">"com.docker.network.driver.mtu"</span>: <span class="string">"1500"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"Labels"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>先把 <code>Containers</code> 先存起來<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">containers=$(docker network inspect bridge | jq <span class="string">'.[0].Containers'</span> | jq <span class="string">'keys[]'</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$containers</span>            <span class="comment"># b59a12af7c87621b43c95a9adbcf047076b8a4b6b6ce0d6c5e6e48e21188ce6a</span></span><br></pre></td></tr></table></figure></p><p>再拿來 select 一次<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipv4=$(docker network inspect bridge | jq <span class="string">".[0].Containers.<span class="variable">$&#123;containers&#125;</span>.IPv4Address"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ipv4</span>            <span class="comment"># 172.17.0.2/16</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;jq&quot;&gt;&lt;a href=&quot;#jq&quot; class=&quot;headerlink&quot; title=&quot;jq&quot;&gt;&lt;/a&gt;jq&lt;/h3&gt;&lt;p&gt;在 shell 環境下, 用來解析 json 字串的工具, 類似 &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, &lt;
      
    
    </summary>
    
      <category term="misc" scheme="https://jerry80409.github.io/categories/misc/"/>
    
    
      <category term="jq" scheme="https://jerry80409.github.io/tags/jq/"/>
    
      <category term="json" scheme="https://jerry80409.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 設定</title>
    <link href="https://jerry80409.github.io/2018/12/07/setup-hexo/"/>
    <id>https://jerry80409.github.io/2018/12/07/setup-hexo/</id>
    <published>2018-12-07T05:40:23.000Z</published>
    <updated>2018-12-07T07:23:54.170Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>每個工程師都有一段踏入不歸路的小故事, 我的程式學習之路是從寫 blog 開始, 從改 css 到自己架設 wordpress 學了 php, 用了 <a href="http://octopress.org/" target="_blank" rel="noopener">octopress</a>, <a href="https://hexo.io/" target="_blank" rel="noopener">hexo</a> 學了 git。總而言之如果你不嫌麻煩 <code>HEXO</code> 是個很棒的 blog 寫作套件, 方便讓你把 blog hosting 在 Github 上。</p><h3 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h3><p><a href="https://hexo.io/zh-tw/docs/#%E5%AE%89%E8%A3%9D%E9%9C%80%E6%B1%82" target="_blank" rel="noopener">Hexo docs</a>, 需要 node.js 環境支援。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node --version            <span class="comment"># v11.2.0</span></span><br><span class="line">npm --version             <span class="comment"># 6.4.1</span></span><br><span class="line">npm install hexo-cli -g   <span class="comment"># -g 安裝在 global</span></span><br></pre></td></tr></table></figure></p><p>建立 blog 資料夾, 我自己是習慣在自己的使用者目錄下建立, 打開 <code>http://localhost:4000</code> 就能預覽上線後的樣子<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo g; hexo s</span><br><span class="line"><span class="comment"># INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span></span><br></pre></td></tr></table></figure></p><h3 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h3><p><a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="noopener">Hexo-theme-clean-blog</a>, 會選用這個 theme 是因為寫 google bloger 也是用這個, 字體跟排版對中文支援比較不適合, 但可以自己微調。</p><p>修改 <code>~/blog/theme/clean-blog/source/css/mixins.styl</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sans-serif()</span><br><span class="line">  font-family -apple-system, BlinkMacSystemFont, &apos;Open Sans&apos;, &apos;Helvetica Neue&apos;, Helvetica, Arial, sans-serif</span><br></pre></td></tr></table></figure></p><p>其他細節我忘了 XD。</p><h3 id="Github-plugin"><a href="#Github-plugin" class="headerlink" title="Github plugin"></a>Github plugin</h3><p><a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a> 這個套件用來把 blog hosting 到 Github 上面<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/blog</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>修改 _config.yml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim  ~/blog/_config.yml</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/your-github-account/your-github-account.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  message:</span><br></pre></td></tr></table></figure><p>部署到 Github 上<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><h3 id="Rss-plugin-option"><a href="#Rss-plugin-option" class="headerlink" title="Rss plugin (option)"></a>Rss plugin (option)</h3><p><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a>, 如果希望其他人可以用 Rss 瀏覽你的 blog 的話可以考慮安裝一下這個 plugin。我自己有遇到 <code>PCDATA invalid Char value 8</code> <a href="https://github.com/hexojs/hexo-generator-feed/issues/35" target="_blank" rel="noopener">Issue</a> 還沒處理。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></p><p>修改 _config.yml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/blog/_config.yml</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Feed Atom</span></span><br><span class="line"><span class="comment"># https://github.com/hexojs/hexo-generator-feed</span></span><br><span class="line">feed:</span><br><span class="line">  <span class="built_in">type</span>: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  <span class="built_in">limit</span>: 10</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g            <span class="comment"># 這個指令除了產生文章頁面外, 可以在 http://localhost:4000/atom.xml 看到你的 rss 文章</span></span><br></pre></td></tr></table></figure><h3 id="Disqus-設定"><a href="#Disqus-設定" class="headerlink" title="Disqus 設定"></a>Disqus 設定</h3><p><a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 是留言管理套件, <a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="noopener">Hexo-theme-clean-blog</a>, 有支援 Disqus, 設定起來很方便, 只要申請好把相關資訊設定在 <code>blog/themes/clean-blog/_config.yml</code> 就好了。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/blog/themes/clean-blog/_config.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Comments. Choose one by filling up the information</span></span><br><span class="line">comments:</span><br><span class="line">  <span class="comment"># Disqus comments</span></span><br><span class="line">  disqus_shortname: your-disqus-shortname</span><br></pre></td></tr></table></figure><h3 id="Google-Analytics-設定"><a href="#Google-Analytics-設定" class="headerlink" title="Google Analytics 設定"></a>Google Analytics 設定</h3><p><a href="https://analytics.google.com/analytics/web/" target="_blank" rel="noopener">Google Analytics</a> 網站分析工具, 用來分析流量, 瀏覽者行為的工具, 在寫文章時可以參考一下報表做改進, 一樣 <a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="noopener">Hexo-theme-clean-blog</a>, 有支援 Google Analytics, 設定一下就好。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/blog/themes/clean-blog/_config.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Analytics Tracking ID</span></span><br><span class="line">google_analytics: your-google-analytics-tracking-id</span><br></pre></td></tr></table></figure><h3 id="提交-sitemap"><a href="#提交-sitemap" class="headerlink" title="提交 sitemap"></a>提交 sitemap</h3><p><code>sitemap.xml</code> 是給搜尋引擎爬蟲閱讀的文件, 沒提交也不會怎樣, 只是更新到搜尋引擎上會比較慢一點而已。到 <a href="https://search.google.com/search-console/about" target="_blank" rel="noopener">Google search console</a>, 沒意外的話設定好 web propertity 把網址填上去它就會自動去爬, 不太需要設定什麼。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g            <span class="comment"># 這個指令除了產生文章頁面外, 可以在 http://localhost:4000/sitemap.xml 看到你的 sitemap</span></span><br></pre></td></tr></table></figure><p>Google search console 後台<br><img src="/img/setup-hexo/google-search-console.png" alt="google-search-console"></p><h3 id="看板娘-option"><a href="#看板娘-option" class="headerlink" title="看板娘 (option)"></a>看板娘 (option)</h3><p>不要問, 但很厲害, <a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">Hexo-helper-live2d</a></p><h3 id="Version-Controller"><a href="#Version-Controller" class="headerlink" title="Version Controller"></a>Version Controller</h3><p>除了 hosting 要開一個 Repository, 記得另外開一個 Repository 做版本管理, 把 blog 相關設定跟現有的文章 commit 上去, 方便之後在不同的電腦上編寫。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> your-blog-repo</span><br><span class="line"><span class="built_in">cd</span> your-blog</span><br><span class="line">npm install</span><br><span class="line">hexo new post your-post</span><br></pre></td></tr></table></figure><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo docs</a></li><li><a href="https://coffee0127.github.io/blog/2016/08/09/hexo-configuration/" target="_blank" rel="noopener">Xuan’s Blog - hexo config</a></li><li><a href="https://www.jianshu.com/p/c20bb9df1867" target="_blank" rel="noopener">Hexo SEO - 簡書</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h3&gt;&lt;p&gt;每個工程師都有一段踏入不歸路的小故事, 我的程式學習之路是從寫 blog 開始, 從改 css 到自己架設 wordpres
      
    
    </summary>
    
      <category term="misc" scheme="https://jerry80409.github.io/categories/misc/"/>
    
    
      <category term="hexo" scheme="https://jerry80409.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>mac 開發環境設定</title>
    <link href="https://jerry80409.github.io/2018/12/07/mac-dev-setup/"/>
    <id>https://jerry80409.github.io/2018/12/07/mac-dev-setup/</id>
    <published>2018-12-07T04:34:20.000Z</published>
    <updated>2018-12-24T09:24:12.283Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Install-Homebrew"><a href="#Install-Homebrew" class="headerlink" title="Install Homebrew"></a>Install Homebrew</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="Iterm2"><a href="#Iterm2" class="headerlink" title="Iterm2"></a>Iterm2</h3><p><a href="https://sourabhbajaj.com/mac-setup/iTerm/" target="_blank" rel="noopener">https://sourabhbajaj.com/mac-setup/iTerm/</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install iterm2</span><br></pre></td></tr></table></figure></p><h3 id="Oh-my-zsh-option"><a href="#Oh-my-zsh-option" class="headerlink" title="Oh-my-zsh (option)"></a>Oh-my-zsh (option)</h3><p>其實我不太擅長寫 <code>z_shell</code>, 單純只是覺得好看而已<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"source ~/.bash_profile"</span> &gt;&gt; .zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></p><p>移除 oh-my-zsh<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uninstall_oh_my_zsh</span><br></pre></td></tr></table></figure></p><h3 id="Bash-it-option"><a href="#Bash-it-option" class="headerlink" title="Bash-it (option)"></a>Bash-it (option)</h3><p>如果還是習慣寫 <code>bash_shell</code>, 我會推薦 <a href="https://github.com/Bash-it/bash-it" target="_blank" rel="noopener">bash-it</a> 這個套件。<br>這邊有多種選擇 <a href="https://github.com/k4m4/terminals-are-sexy" target="_blank" rel="noopener">https://github.com/k4m4/terminals-are-sexy</a>, 從 zsh, fish, bash, putty, etc. 應有盡有。</p><h3 id="Fonts"><a href="#Fonts" class="headerlink" title="Fonts"></a>Fonts</h3><p><a href="https://github.com/Homebrew/homebrew-cask-fonts/tree/master/Casks" target="_blank" rel="noopener">https://github.com/Homebrew/homebrew-cask-fonts/tree/master/Casks</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew tap caskroom/fonts</span><br><span class="line">brew search nerd</span><br><span class="line">brew cask install font-sourcecodepro-nerd-font</span><br><span class="line">brew cask install font-sourcecodepro-nerd-font-mono</span><br></pre></td></tr></table></figure></p><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install java8 maven gradle      </span><br><span class="line">brew cask install intellij-idea</span><br></pre></td></tr></table></figure><h3 id="Python3"><a href="#Python3" class="headerlink" title="Python3"></a>Python3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install python</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line">python3 --version            <span class="comment"># Python 3.7.1</span></span><br><span class="line">pip3 --version               <span class="comment"># pip 18.1 from /usr/local/lib/python3.7/site-packages/pip (python 3.7)</span></span><br><span class="line">pip3 install pipenv          <span class="comment"># (option) 自己習慣用 pipenv</span></span><br><span class="line">pip3 install pytest          <span class="comment"># (option) 自己習慣用 pytest</span></span><br></pre></td></tr></table></figure><h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><p>安裝 <code>nvm</code>, 用來切換 node.js 版本<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install nvm</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export NVM_DIR="</span><span class="variable">$HOME</span>/.nvm<span class="string">" &gt;&gt; ~/.zshrc</span></span><br><span class="line"><span class="string">echo "</span>. <span class="string">"/usr/local/opt/nvm/nvm.sh"</span> &gt;&gt; ~/.zshrc</span><br><span class="line">nvm install stable</span><br></pre></td></tr></table></figure></p><h3 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install mysql</span><br><span class="line">brew services start mysql            <span class="comment"># start mysql service</span></span><br><span class="line">brew cask install tableplus          <span class="comment"># mysql gui, support mysql_8.0</span></span><br><span class="line">brew cask install sequel-pro         <span class="comment"># mysql gui</span></span><br></pre></td></tr></table></figure><h3 id="Docker-CE"><a href="#Docker-CE" class="headerlink" title="Docker CE"></a>Docker CE</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install docker</span><br><span class="line">docker --version &amp;&amp; docker-compose --version &amp;&amp; docker-machine --version</span><br><span class="line"><span class="comment"># Docker version 18.09.0, build 4d60db4</span></span><br><span class="line"><span class="comment"># docker-compose version 1.23.2, build 1110ad01</span></span><br><span class="line"><span class="comment"># docker-machine version 0.16.0, build 702c267f</span></span><br></pre></td></tr></table></figure><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install sourcetree</span><br></pre></td></tr></table></figure><h3 id="Common"><a href="#Common" class="headerlink" title="Common"></a>Common</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install boom-3d            <span class="comment"># 音效增強</span></span><br><span class="line">brew cask install google-chrome      <span class="comment"># 自己常用的瀏覽器</span></span><br><span class="line">brew cask install telegram           <span class="comment"># 通訊軟體</span></span><br><span class="line">brew cask install evernote           <span class="comment"># 筆記工具</span></span><br><span class="line">brew cask install visual-studio-code <span class="comment"># 什麼都能寫的萬用 IDE</span></span><br><span class="line"></span><br><span class="line">brew install tree                    <span class="comment"># show directory tree</span></span><br><span class="line">brew install jq                      <span class="comment"># 操作 json 工具</span></span><br></pre></td></tr></table></figure><h3 id="REST-client"><a href="#REST-client" class="headerlink" title="REST client"></a>REST client</h3><p><a href="https://www.getpostman.com/" target="_blank" rel="noopener">https://www.getpostman.com/</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install postman</span><br></pre></td></tr></table></figure></p><h3 id="Google-cloud-platform-tools"><a href="#Google-cloud-platform-tools" class="headerlink" title="Google cloud platform tools"></a>Google cloud platform tools</h3><p>安裝 <code>gsutil</code><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://sdk.cloud.google.com | bash</span><br></pre></td></tr></table></figure></p><p>安裝 <code>gcloud</code><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-208.0.1-darwin-x86_64.tar.gz</span><br><span class="line">tar -zxvf google-cloud-sdk-208.0.1-darwin-x86_64.tar.gz .</span><br><span class="line">./google-cloud-sdk/install.sh</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line">gcloud init</span><br></pre></td></tr></table></figure></p><h3 id="Hexo-option"><a href="#Hexo-option" class="headerlink" title="Hexo (option)"></a>Hexo (option)</h3><p>寫 blog 的套件, 需要 node.js 環境<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Install-Homebrew&quot;&gt;&lt;a href=&quot;#Install-Homebrew&quot; class=&quot;headerlink&quot; title=&quot;Install Homebrew&quot;&gt;&lt;/a&gt;Install Homebrew&lt;/h3&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="misc" scheme="https://jerry80409.github.io/categories/misc/"/>
    
    
      <category term="mac_os" scheme="https://jerry80409.github.io/tags/mac-os/"/>
    
  </entry>
  
</feed>
